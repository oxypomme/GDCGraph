{"version":3,"sources":["models/EMissionStatus.ts","features/commons/Navbar.tsx","views/home/App.tsx","views/home/index.tsx","app/hooks.ts","app/reducers/playerSlice.ts","components/index.ts","components/Loading.tsx","models/EPlayerStatus.ts","components/Tag.tsx","features/commons/PieStyle.ts","features/players/Achivements.tsx","features/commons/CustomComboChart.tsx","features/players/DayGraph.tsx","features/players/Player.tsx","features/players/Players.tsx","features/players/SearchPlayer.tsx","features/players/index.tsx","views/players/index.tsx","../res/canardhurt.png","views/errors/NotFound.tsx","views/errors/NotImplemented.tsx","app/reducers/mapsSlice.ts","features/maps/index.tsx","views/maps/index.tsx","features/commons/Footer.tsx","App.tsx","reportWebVitals.ts","app/reducers/index.ts","app/store.ts","index.tsx"],"names":["EMissionStatus","Nav","styled","nav","NavList","ul","NavItem","li","props","right","Navbar","id","exact","to","icon","faChartPie","faUsers","faGlobeEurope","faMap","href","faChartLine","Container","div","Applet","image","title","desc","onClick","tabIndex","src","Flex","Home","history","useHistory","push","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchPlayerList","createAsyncThunk","a","fetch","urljoin","urlAPI","json","fetchPlayer","getState","currPlayers","player","players","currIndex","findIndex","val","parseInt","name","playerSlice","createSlice","initialState","playerList","updated","lastFetchIndex","isFetching","extraReducers","pending","type","state","fulfilled","payload","rejected","error","console","length","reducers","selectPlayerList","createSelector","selectPlayer","selectPlayerFetching","HSeparator","color","width","VSeparator","height","InfiniteRotate","keyframes","Background","Loading","faSyncAlt","size","EPlayerStatus","span","Tag","element","undefined","React","useState","setColor","content","setContent","useEffect","SUCCESS","ALIVE","FAILED","DEAD","PieStyle","colors","legend","position","pieSliceTextStyle","Card","UNLOCK_PERCENT","Achivements","achivements","setAchivements","achs","total_player_mission_status","SUCCES_Mort","total_mission_status","SUCCES","faSkull","toLocaleString","maximumFractionDigits","count_missions","faGamepad","sortedDays","Object","keys","days","map","key","i","day","dayjs","format","count","values","sort","b","faCalendarDay","sortedRoles","roles","roles_count","leaderCount","role","includes","faMedal","last_mission","months","diff","date","faPlaneDeparture","streak","mort","current","faBookDead","vivant","faRunning","data-tip","faTrophy","CustomComboChart","stats","columns","chartType","loader","data","options","isStacked","vAxis","hAxis","seriesType","series","3","chartWrapperParams","view","chartFilters","value","label","TimeGraph","currStat","setCurrStat","defaultValue","onChange","elmnt","menuPlacement","Base","UpdateLabel","p","PlayerContainer","InfoContainer","AchivementsContainer","ChartContainer","wide","PlayerDetail","dispatch","isPlayerLoading","roleStats","setRoleStats","deathStats","setDeathStats","looseStats","setLooseStats","monthStats","setMonthStats","Array","dayStats","setDayStats","playableWeeksInMonth","month","year","counter","Date","getMonth","playablesDays","getDay","getRoleStats","alive","total_player_status","Vivant","death","Mort","getDeathStats","win","loose","ECHEC","pvp","PVP","getLooseStats","header","reverse","getMonthStats","dataDead","dataFail","dayVal","Inconnu","INCONNU","getDayStats","mission_status","max","textPosition","minValue","1","lineDashStyle","AllPlayers","topPlayer","setTopPlayer","averagePlayer","setAveragePlayer","getTop3Stats","getAverage","headers","slice","sumMiss","chart","Search","SearchPlayer","setPlayer","location","useLocation","playersItems","setPlayersItems","selectRef","useRef","ref","toString","window","replaceState","pathname","replace","onKeyDown","event","select","clearValue","components","DropdownIndicator","IndicatorSeparator","Placeholder","getOptionLabel","Player","playerID","Title","h1","PlayersView","useParams","NotFound","canardhurt","NotImplemented","fetchMapList","mapSlice","mapList","maps","selectMapList","selectMapFetching","MapsCharts","mapsList","isMapsFetching","topMaps","setTopMaps","getWorst5Stats","mission_count","Maps","Foot","footer","LinkText","IconWithLink","VAlign","margin","Footer","faFontAwesome","AppContainer","App","basename","path","component","Players","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","playerReducer","mapReducer","store","configureStore","extend","customParseFormat","locale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e2c2ad.chunk.js","sourcesContent":["enum EMissionStatus {\r\n    UNKNOWN = 0,\r\n    SUCCESS,\r\n    FAILED\r\n}\r\n\r\nexport default EMissionStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartLine, faChartPie, faGlobeEurope, faMap, faUsers } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = styled.nav`\r\n    height: var(--nav-size);\r\n    width: 100%;\r\n    position: fixed;\r\n    float: left;\r\n    top: 0;\r\n    z-index: 9999;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    height: 100%;\r\n    list-style-type: none;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    background-color: var(--background-dark);\r\n`;\r\n\r\nconst NavItem = styled.li<{ right?: boolean }>`\r\n    height: 100%;\r\n    float: ${props => props.right ? 'right' : 'left'};\r\n\r\n    & > a {\r\n        display: inline-block;\r\n        color: var(--text);\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n        height: 100%;\r\n        &:hover {\r\n            background-color: var(--background-light);\r\n        }\r\n        &.active {\r\n            background-color: var(--accent1);\r\n        }\r\n    }\r\n\r\n    & svg {\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\nconst Navbar = (): JSX.Element => {\r\n    return (\r\n        <Nav id=\"navbar\">\r\n            <NavList>\r\n                <NavItem><NavLink exact to=\"/\"><FontAwesomeIcon icon={faChartPie} />GDC Graph</NavLink></NavItem>\r\n                <NavItem><NavLink to=\"/players\"><FontAwesomeIcon icon={faUsers} />Joueurs</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/missions\"><FontAwesomeIcon icon={faGlobeEurope} />Missions</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/maps\"><FontAwesomeIcon icon={faMap} />Maps</NavLink></NavItem>\r\n                <NavItem right><a href=\"https://grecedecanards.fr/GDCStats/\"><FontAwesomeIcon icon={faChartLine} />GDC Stats</a></NavItem>\r\n            </NavList>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    flex: 1 0 25%;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    margin: 5%;\r\n    padding: 5%;\r\n    cursor: pointer;\r\n`;\r\n\r\ntype PropsType = {\r\n    image: string,\r\n    title: string,\r\n    desc: string,\r\n    onClick: () => void\r\n}\r\n\r\nconst Applet = (props: PropsType): JSX.Element => {\r\n    const { image, title, desc, onClick } = props;\r\n    return (\r\n        <Container tabIndex={0} onClick={onClick}>\r\n            <img src={image} />\r\n            <h2>{title}</h2>\r\n            <p>{desc}</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Applet;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Applet from './App';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    justify-items: center;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Home = (): JSX.Element => {\r\n    const history = useHistory();\r\n\r\n    const handlePlayersClick = () => {\r\n        history.push('/players');\r\n    }\r\n\r\n    const handleMissionsClick = () => {\r\n        history.push('/missions');\r\n    }\r\n\r\n    const handleMapsClick = () => {\r\n        history.push('/maps');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex>\r\n                <Applet image=\"\" title=\"Joueurs\" desc=\"Affiche des stats générales sur les joueurs, ou un joueur en particulier.\" onClick={handlePlayersClick} />\r\n                <Applet image=\"\" title=\"Missions\" desc=\"Affiche des stats générales sur les missions, ou une mission en particulier.\" onClick={handleMissionsClick} />\r\n                <Applet image=\"\" title=\"Maps\" desc=\"Affiche des stats générales sur les maps\" onClick={handleMapsClick} />\r\n            </Flex>\r\n            <p>\r\n                Outil développé pour les canards de <a href=\"https://grecedecanards.fr/\">Grèce de Canard</a>.\r\n            </p>\r\n            <p>\r\n                Lié à <a href=\"https://grecedecanards.fr/GDCStats/\">GDC Stats</a>.\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IPlayerType, { IPlayersType } from '@/models/IPlayerType'\r\n\r\ntype PlayerListType = { players: IPlayersType[], updated: string }\r\ninterface PlayerState {\r\n    playerList: PlayerListType,\r\n    players: IPlayerType[],\r\n    lastFetchIndex: number,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const fetchPlayerList = createAsyncThunk(\r\n    'player/fetchPlayerList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/players'))).json()\r\n);\r\nexport const fetchPlayer = createAsyncThunk(\r\n    'player/fetchPlayer',\r\n    async (id: string, { getState }) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const currPlayers = ((getState() as any).player as PlayerState).players;\r\n        const currIndex = currPlayers.findIndex(val => val.id === parseInt(id) || val.name === id);\r\n        if (currIndex !== -1) {\r\n            return currPlayers[currIndex];\r\n        }\r\n\r\n        const player = await (await fetch(urljoin(urlAPI, `/players/${id}`))).json();\r\n        if (player.name)\r\n            return player;\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const playerSlice = createSlice({\r\n    name: 'player',\r\n    initialState: {\r\n        playerList: { players: [], updated: '' },\r\n        players: [],\r\n        lastFetchIndex: -1,\r\n        isFetching: false\r\n    } as PlayerState,\r\n    extraReducers: {\r\n        [fetchPlayerList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayerList.fulfilled.type]: (state, { payload: playerList }: PayloadAction<PlayerListType>): PlayerState => ({\r\n            ...state,\r\n            playerList,\r\n            isFetching: false\r\n        }),\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchPlayerList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayer.fulfilled.type]: (state, { payload: player }: PayloadAction<IPlayerType | null>): PlayerState => {\r\n            let players = [...state.players];\r\n            let lastFetchIndex = -1;\r\n\r\n            if (player) {\r\n                lastFetchIndex = players.findIndex(val => val.id == player.id);\r\n\r\n                if (lastFetchIndex === -1) {\r\n                    lastFetchIndex = players.length;\r\n                    players = [...players, player];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                players,\r\n                lastFetchIndex,\r\n                isFetching: false\r\n            }\r\n        },\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchPlayer.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): PlayerState => state.player;\r\n\r\nexport const selectPlayerList = createSelector(getState, state => state.playerList);\r\nexport const selectPlayer = createSelector(getState, state => state.players[state.lastFetchIndex]);\r\nexport const selectPlayerFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default playerSlice.reducer;","import styled from \"@emotion/styled\";\r\n\r\nexport const HSeparator = styled.div<{ color?: string, width?: string }>`\r\n    border-bottom: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.width ? `width: ${props.width} ;` : ''}\r\n`;\r\nexport const VSeparator = styled.div<{ color?: string, height?: string }>`\r\n    border-left: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.height ? `height: ${props.height} ;` : ''}\r\n`;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { keyframes } from '@emotion/react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left:0 ;\r\n    z-index: 9998;\r\n    background-color: black;\r\n    opacity: 0.5;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > svg {\r\n        animation: ${InfiniteRotate} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst Loading = (): JSX.Element => {\r\n    return (\r\n        <Background>\r\n            <FontAwesomeIcon icon={faSyncAlt} color={'white'} size={'6x'} />\r\n        </Background>\r\n    );\r\n}\r\n\r\nexport default Loading;","enum EPlayerStatus {\r\n    UNKNOWN = 0,\r\n    ALIVE,\r\n    DEAD\r\n}\r\nexport default EPlayerStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport EMissionStatus from '@/models/EMissionStatus';\r\nimport EPlayerStatus from '@/models/EPlayerStatus';\r\n\r\nconst Container = styled.span<{ color: string }>`\r\n    background-color: ${props => props.color};\r\n    font-size: 8pt;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n    vertical-align: text-top;\r\n`;\r\n\r\ntype PropsType = {\r\n    element: EMissionStatus | EPlayerStatus | undefined\r\n}\r\n\r\nconst Tag = (props: PropsType): JSX.Element => {\r\n    const { element } = props;\r\n\r\n    if (element === undefined) {\r\n        return <></>;\r\n    }\r\n\r\n    const [color, setColor] = React.useState('');\r\n    const [content, setContent] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        switch (element) {\r\n            case EMissionStatus.SUCCESS:\r\n                setColor('#81d5ff');\r\n                setContent('Succès');\r\n                break;\r\n            case EPlayerStatus.ALIVE:\r\n                setColor('#81d5ff');\r\n                setContent('Vivant');\r\n                break;\r\n\r\n            case EMissionStatus.FAILED:\r\n                setColor('#ee9e9e');\r\n                setContent('Echec');\r\n                break;\r\n            case EPlayerStatus.DEAD:\r\n                setColor('#ee9e9e');\r\n                setContent('Mort');\r\n                break;\r\n            default:\r\n                setColor('#fceb96');\r\n                setContent('Inconnu')\r\n                break;\r\n        }\r\n    }, [element]);\r\n\r\n    return (\r\n        <Container color={color}>\r\n            {content}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Tag;","const PieStyle = {\r\n    colors: [\r\n        '#81d5ff',\r\n        '#ee9e9e',\r\n        '#fceb96',\r\n        \"#ADEBAD\",\r\n        \"#C6A5CC\"\r\n    ],\r\n    legend: {\r\n        position: 'bottom'\r\n    },\r\n    pieSliceTextStyle: {\r\n        color: 'black'\r\n    }\r\n}\r\n\r\nexport default PieStyle;","import IPlayerType from \"@/models/IPlayerType\";\r\nimport styled from \"@emotion/styled\";\r\nimport {\r\n\tfaBookDead,\r\n\tfaCalendarDay,\r\n\tfaGamepad,\r\n\tfaMedal,\r\n\tfaPlaneDeparture,\r\n\tfaRunning,\r\n\tfaSkull,\r\n\tfaTrophy,\r\n\tIconDefinition,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst Card = styled.div`\r\n\tbackground: var(--background-dark);\r\n\twidth: 100%;\r\n\tpadding: 10px;\r\n\tmargin: 10px;\r\n\tborder-radius: 5px;\r\n\tposition: relative;\r\n\t& > h4 {\r\n\t\tmargin: 0;\r\n\t\tmargin-left: 5px;\r\n\t\tdisplay: inline;\r\n\t}\r\n\t& > svg {\r\n\t\tposition: absolute;\r\n\t\tleft: 10px;\r\n\t}\r\n`;\r\n\r\ntype PropsType = {\r\n\tplayer: IPlayerType;\r\n};\r\n\r\ninterface AchivementType {\r\n\tname: string;\r\n\ticon?: IconDefinition;\r\n\tdesc: string;\r\n}\r\n\r\nconst UNLOCK_PERCENT = 40 / 100;\r\nconst NB_MISSION_MIN = 400;\r\n\r\nconst Achivements = (props: PropsType): JSX.Element => {\r\n\tconst { player } = props;\r\n\r\n\tconst [achivements, setAchivements] = React.useState<AchivementType[]>([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst achs: AchivementType[] = [];\r\n\t\tif (player) {\r\n\t\t\tif (\r\n\t\t\t\tplayer.total_player_mission_status.SUCCES_Mort /\r\n\t\t\t\t\tplayer.total_mission_status.SUCCES >=\r\n\t\t\t\tUNLOCK_PERCENT\r\n\t\t\t) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: \"Elle a fini sans toi\",\r\n\t\t\t\t\ticon: faSkull,\r\n\t\t\t\t\tdesc: `Est mort dans ${(\r\n\t\t\t\t\t\t(player.total_player_mission_status.SUCCES_Mort /\r\n\t\t\t\t\t\t\tplayer.total_mission_status.SUCCES) *\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t).toLocaleString(undefined, {\r\n\t\t\t\t\t\tmaximumFractionDigits: 2,\r\n\t\t\t\t\t})}% de ses missions accomplies`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (player.count_missions >= NB_MISSION_MIN) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: \"Petit joueur\",\r\n\t\t\t\t\ticon: faGamepad,\r\n\t\t\t\t\tdesc: `A joué seulement ${player.count_missions} missions`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst sortedDays = Object.keys(player.days)\r\n\t\t\t\t.map((key, i) => ({\r\n\t\t\t\t\tday: dayjs().day(parseInt(key)).format(\"dddd\"),\r\n\t\t\t\t\tcount: Object.values(player.days)[i].count,\r\n\t\t\t\t}))\r\n\t\t\t\t.sort((a, b) => b.count - a.count);\r\n\t\t\tif (sortedDays[0]?.count / player.count_missions >= UNLOCK_PERCENT) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: `Joueur du ${sortedDays[0].day}`,\r\n\t\t\t\t\ticon: faCalendarDay,\r\n\t\t\t\t\tdesc: `A joué ${(\r\n\t\t\t\t\t\t(sortedDays[0].count / player.count_missions) *\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t).toLocaleString(undefined, {\r\n\t\t\t\t\t\tmaximumFractionDigits: 2,\r\n\t\t\t\t\t})}% de ses missions le ${sortedDays[0].day}`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst sortedRoles = Object.keys(player.roles.roles_count)\r\n\t\t\t\t.map((key, i) => ({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tcount: Object.values(player?.roles.roles_count)[i],\r\n\t\t\t\t}))\r\n\t\t\t\t.sort((a, b) => b.count - a.count);\r\n\t\t\tif (sortedRoles[0]?.count / player.count_missions >= UNLOCK_PERCENT) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: `Éternel ${sortedRoles[0].name}`,\r\n\t\t\t\t\tdesc: `A joué ${(\r\n\t\t\t\t\t\t(sortedRoles[0].count / player.count_missions) *\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t).toLocaleString(undefined, {\r\n\t\t\t\t\t\tmaximumFractionDigits: 2,\r\n\t\t\t\t\t})}% de ses missions en tant que ${sortedRoles[0].name}`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tlet leaderCount = 0;\r\n\t\t\tfor (const role of sortedRoles) {\r\n\t\t\t\tif (role.name.includes(\"Leader\")) {\r\n\t\t\t\t\tleaderCount += role.count;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (leaderCount / player.count_missions >= UNLOCK_PERCENT) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: \"Leader un jour, Leader toujours\",\r\n\t\t\t\t\ticon: faMedal,\r\n\t\t\t\t\tdesc: `A joué ${(\r\n\t\t\t\t\t\t(leaderCount / player.count_missions) *\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t).toLocaleString(undefined, {\r\n\t\t\t\t\t\tmaximumFractionDigits: 2,\r\n\t\t\t\t\t})}% de ses missions en tant que Leader (SL, TL ou Leader)`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (player.last_mission) {\r\n\t\t\t\tconst months = dayjs().diff(\r\n\t\t\t\t\tdayjs(player.last_mission?.date, \"DD/MM/YYYY\"),\r\n\t\t\t\t\t\"month\"\r\n\t\t\t\t);\r\n\t\t\t\tif (months > 2)\r\n\t\t\t\t\tachs.push({\r\n\t\t\t\t\t\tname: \"Je sais où tu te cache !\",\r\n\t\t\t\t\t\ticon: faPlaneDeparture,\r\n\t\t\t\t\t\tdesc: `A joué sa dernière mission il y a ${months} mois`,\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (player.streak.mort.current && player.streak.mort.count >= 4) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: \"J'ai beau être matinal...'\",\r\n\t\t\t\t\ticon: faBookDead,\r\n\t\t\t\t\tdesc: `Est mort ces ${player.streak.mort.count} dernières missions`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (player.streak.vivant.current && player.streak.vivant.count >= 4) {\r\n\t\t\t\tachs.push({\r\n\t\t\t\t\tname: \"Mourrir peut attendre\",\r\n\t\t\t\t\ticon: faRunning,\r\n\t\t\t\t\tdesc: `Est vivant ces ${player.streak.vivant.count} dernières missions`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetAchivements(achs);\r\n\t}, [player]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{achivements.map((a, id) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Card key={id} data-tip={a.desc}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={a.icon || faTrophy} />\r\n\t\t\t\t\t\t<h4>{a.name}</h4>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<ReactTooltip />\r\n\t\t\t\t</>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Achivements;\r\n","import React from 'react';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { ChartStat } from '@/models/StatType';\r\nimport PieStyle from './PieStyle';\r\n\r\ntype PropsType = {\r\n    stats: ChartStat,\r\n    columns: number[]\r\n}\r\n\r\nconst CustomComboChart = (props: PropsType): JSX.Element => {\r\n    const { stats, columns } = props;\r\n\r\n    return (\r\n        <Chart\r\n            width={'100%'}\r\n            height={'250px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div>Waiting Data</div>}\r\n            data={stats}\r\n            options={{\r\n                isStacked: true,\r\n                vAxis: { title: \"Nombre de missions\" },\r\n                hAxis: {\r\n                    title: \"Journée\"\r\n                },\r\n                seriesType: 'bars',\r\n                series: { 3: { type: 'line' } },\r\n                ...PieStyle\r\n            }}\r\n            chartWrapperParams={{ view: { columns } }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CustomComboChart;","import React from 'react';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport CustomComboChart from '../commons/CustomComboChart';\r\nimport { ChartStat } from '@/models/StatType';\r\n\r\nexport type TimeStats = ChartStat[];\r\n\r\ntype PropsType = {\r\n    stats: TimeStats\r\n}\r\n\r\nconst chartFilters = [{ value: 1, label: \"Total\" }, { value: 2, label: \"Mort ou vif\" }, { value: 3, label: \"Victoire\" }];\r\n\r\nconst TimeGraph = (props: PropsType): JSX.Element => {\r\n    const { stats } = props;\r\n\r\n    const [currStat, setCurrStat] = React.useState(1);\r\n\r\n    const handleFilterChange = (elmnt: { value: number, label: string } | null) => {\r\n        if (elmnt?.value) {\r\n            setCurrStat(elmnt.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                currStat === 1 ? <CustomComboChart stats={stats[0]} columns={[0, 4]} /> : <></>\r\n            }\r\n            {\r\n                currStat === 2 ? <CustomComboChart stats={stats[0]} columns={[0, 1, 2, 3, 4]} /> : <></>\r\n            }\r\n            {\r\n                currStat === 3 ? <CustomComboChart stats={stats[1]} columns={[0, 1, 2, 3, 4, 5]} /> : <></>\r\n            }\r\n            <Select\r\n                defaultValue={chartFilters[0]}\r\n                options={chartFilters}\r\n                onChange={handleFilterChange}\r\n                menuPlacement=\"top\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TimeGraph;","import { useAppDispatch, useAppSelector } from \"@/app/hooks\";\r\nimport {\r\n\tfetchPlayer,\r\n\tselectPlayer,\r\n\tselectPlayerFetching,\r\n} from \"@/app/reducers/playerSlice\";\r\nimport { HSeparator, VSeparator } from \"@/components\";\r\nimport Loading from \"@/components/Loading\";\r\nimport Tag from \"@/components/Tag\";\r\nimport { ChartStat } from \"@/models/StatType\";\r\nimport playablesDays from \"@config/playablesDays.json\";\r\nimport styled from \"@emotion/styled\";\r\nimport dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport PieStyle from \"../commons/PieStyle\";\r\nimport Achivements from \"./Achivements\";\r\nimport TimeGraph, { TimeStats } from \"./DayGraph\";\r\n\r\nconst Base = styled.div`\r\n\twidth: 50%;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n\tcolor: var(--background-light);\r\n\tmargin: 5px 0 0 0;\r\n`;\r\n\r\nconst PlayerContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n\ttext-align: left;\r\n`;\r\n\r\nconst AchivementsContainer = styled.div`\r\n\ttext-align: right;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\talign-content: center;\r\n\tjustify-content: center;\r\n\tflex-wrap: wrap;\r\n\tmargin-top: 20px;\r\n`;\r\n\r\nconst ChartContainer = styled.div<{ wide?: string }>`\r\n\tflex-basis: ${(props) => (props.wide ? \"75%\" : \"49%\")};\r\n\twidth: ${(props) => (props.wide ? props.wide : \"25%\")};\r\n\t& *[dir=\"ltr\"] {\r\n\t\tmargin: 0 auto;\r\n\t}\r\n`;\r\n\r\ntype PropsType = {\r\n\tid: string;\r\n};\r\n\r\nconst PlayerDetail = (props: PropsType): JSX.Element => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { id } = props;\r\n\tconst player = useAppSelector(selectPlayer);\r\n\tconst isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n\tconst [roleStats, setRoleStats] = React.useState({});\r\n\tconst [deathStats, setDeathStats] = React.useState({});\r\n\tconst [looseStats, setLooseStats] = React.useState({});\r\n\tconst [monthStats, setMonthStats] = React.useState({});\r\n\tconst [dayStats, setDayStats] = React.useState(new Array(0));\r\n\r\n\tReact.useEffect((): void => {\r\n\t\tdispatch(fetchPlayer(id));\r\n\t}, [id]);\r\n\r\n\tconst getDeathStats = (): ChartStat[] => {\r\n\t\tconst data: ChartStat[] = [[\"Status fin\", \"Nombre\"]];\r\n\t\tif (player) {\r\n\t\t\tconst alive = player.total_player_status.Vivant;\r\n\t\t\tconst death = player.total_player_status.Mort;\r\n\t\t\tif (alive) {\r\n\t\t\t\tdata.push([\"Vivant\", alive]);\r\n\t\t\t}\r\n\t\t\tif (death) {\r\n\t\t\t\tdata.push([\"Mort\", death]);\r\n\t\t\t}\r\n\t\t\tif (alive + death !== player.count_missions) {\r\n\t\t\t\tdata.push([\"Inconnu\", player.count_missions - (alive + death)]);\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn [...data, [\"\", 0]];\r\n\t};\r\n\r\n\tconst getLooseStats = (): ChartStat[] => {\r\n\t\tconst data: ChartStat[] = [[\"Verdict\", \"Nombre\"]];\r\n\t\tif (player) {\r\n\t\t\tconst win = player.total_mission_status.SUCCES;\r\n\t\t\tconst loose = player.total_mission_status.ECHEC;\r\n\t\t\tconst pvp = player.total_mission_status.PVP;\r\n\t\t\tif (win) {\r\n\t\t\t\tdata.push([\"Succès\", win]);\r\n\t\t\t}\r\n\t\t\tif (loose) {\r\n\t\t\t\tdata.push([\"Echec\", loose]);\r\n\t\t\t}\r\n\t\t\tif (pvp) {\r\n\t\t\t\tdata.push([\"PVP\", pvp]);\r\n\t\t\t}\r\n\t\t\tif (win + loose + pvp !== player.count_missions) {\r\n\t\t\t\tdata.push([\"Inconnu\", player.count_missions - (win + loose + pvp)]);\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn [...data, [\"\", 0]];\r\n\t};\r\n\r\n\tconst getRoleStats = (): unknown[] => {\r\n\t\tconst data: ChartStat[] = [[\"Role\", \"Nombre\"]];\r\n\t\tif (player) {\r\n\t\t\tfor (let i = 0; i < Object.keys(player.roles.roles_count).length; i++) {\r\n\t\t\t\tconst role = Object.keys(player.roles.roles_count)[i];\r\n\t\t\t\tif (Object.values(player.roles.roles_count)[i] > 0)\r\n\t\t\t\t\tdata.push([role, Object.values(player.roles.roles_count)[i]]);\r\n\t\t\t}\r\n\t\t\treturn data.sort((a, b) =>\r\n\t\t\t\ttypeof a[1] === \"number\" && typeof b[1] === \"number\" ? b[1] - a[1] : 0\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn [...data, [\"\", 0]];\r\n\t};\r\n\r\n\tconst playableWeeksInMonth = (month: number, year: number): number => {\r\n\t\tlet day = 1;\r\n\t\tlet counter = 0;\r\n\t\tlet date = new Date(year, month, day);\r\n\t\twhile (date.getMonth() === month) {\r\n\t\t\tif (playablesDays.includes(date.getDay())) {\r\n\t\t\t\tcounter++;\r\n\t\t\t}\r\n\t\t\tday++;\r\n\t\t\tdate = new Date(year, month, day);\r\n\t\t}\r\n\r\n\t\treturn counter;\r\n\t};\r\n\r\n\tconst getMonthStats = (): ChartStat[] => {\r\n\t\tconst header = [\"Mois\", \"Nombre\", \"Maximum*\"];\r\n\t\tif (player) {\r\n\t\t\tconst data: ChartStat[] = [];\r\n\t\t\tfor (let i = 0; i < Object.keys(player.months).length; i++) {\r\n\t\t\t\tconst month = Object.keys(player.months)[i];\r\n\t\t\t\tconst date = dayjs(month, \"MMM YYYY\");\r\n\t\t\t\tif (Object.values(player.months)[i] > 0) {\r\n\t\t\t\t\tdata.push([\r\n\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\tObject.values(player.months)[i],\r\n\t\t\t\t\t\tplayableWeeksInMonth(date.month(), date.year()),\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [header, ...data.reverse()];\r\n\t\t}\r\n\t\treturn [header, [\"\", 0, 0]];\r\n\t};\r\n\r\n\tconst getDayStats = (): TimeStats[] => {\r\n\t\tconst dataDead: TimeStats = [\r\n\t\t\t[\"Journée\", \"Vivant\", \"Mort\", \"Inconnu\", \"Total\", \"\"],\r\n\t\t];\r\n\t\tconst dataFail: TimeStats = [\r\n\t\t\t[\"Journée\", \"Succès\", \"Echec\", \"Inconnu\", \"Total\", \"PVP\"],\r\n\t\t];\r\n\t\tif (player) {\r\n\t\t\tfor (let i = 0; i < Object.keys(player.days).length; i++) {\r\n\t\t\t\tconst day = Object.keys(player.days)[i];\r\n\t\t\t\tconst dayVal = Object.values(player.days)[i];\r\n\t\t\t\tif (dayVal.count > 0) {\r\n\t\t\t\t\tconst label = dayjs().day(parseInt(day)).format(\"dd\");\r\n\t\t\t\t\tdataDead.push([\r\n\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\tdayVal.Vivant,\r\n\t\t\t\t\t\tdayVal.Mort,\r\n\t\t\t\t\t\tdayVal.Inconnu,\r\n\t\t\t\t\t\tdayVal.count,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t]);\r\n\t\t\t\t\tdataFail.push([\r\n\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\tdayVal.SUCCES,\r\n\t\t\t\t\t\tdayVal.ECHEC,\r\n\t\t\t\t\t\tdayVal.INCONNU,\r\n\t\t\t\t\t\tdayVal.count,\r\n\t\t\t\t\t\tdayVal.PVP,\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [dataDead, dataFail];\r\n\t\t}\r\n\t\treturn [\r\n\t\t\t[...dataDead, [\"\", 0, 0, 0, 0, 0]],\r\n\t\t\t[...dataFail, [\"\", 0, 0, 0, 0, 0]],\r\n\t\t];\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (!isPlayerLoading) {\r\n\t\t\tsetRoleStats(getRoleStats());\r\n\t\t\tsetDeathStats(getDeathStats());\r\n\t\t\tsetLooseStats(getLooseStats());\r\n\t\t\tsetMonthStats(getMonthStats());\r\n\t\t\tsetDayStats(getDayStats());\r\n\t\t}\r\n\t}, [isPlayerLoading]);\r\n\r\n\treturn (\r\n\t\t<Base>\r\n\t\t\t{isPlayerLoading ? <Loading /> : <></>}\r\n\t\t\t<UpdateLabel>\r\n\t\t\t\tMis à jour le : {dayjs(player?.updated).format(\"DD/MM/YYYY - HH:mm\")}\r\n\t\t\t</UpdateLabel>\r\n\t\t\t<PlayerContainer>\r\n\t\t\t\t<InfoContainer>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t#{player?.id} - {player?.name}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<p>{player?.count_missions || 0} missions au compteur</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDernière mission joué le {player?.last_mission?.date}{\" \"}\r\n\t\t\t\t\t\t<Tag element={player?.last_mission?.mission_status} />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</InfoContainer>\r\n\t\t\t\t<AchivementsContainer>\r\n\t\t\t\t\t<Achivements player={player} />\r\n\t\t\t\t</AchivementsContainer>\r\n\t\t\t</PlayerContainer>\r\n\t\t\t<HSeparator />\r\n\t\t\t<Container>\r\n\t\t\t\t<ChartContainer>\r\n\t\t\t\t\t<h3>Mort ou vif</h3>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\theight={\"auto\"}\r\n\t\t\t\t\t\tchartType=\"PieChart\"\r\n\t\t\t\t\t\tloader={<div>Waiting Data</div>}\r\n\t\t\t\t\t\tdata={deathStats}\r\n\t\t\t\t\t\toptions={{ ...PieStyle }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tRatio :{\" \"}\r\n\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\tplayer?.total_player_status.Vivant /\r\n\t\t\t\t\t\t\tplayer?.total_player_status.Mort\r\n\t\t\t\t\t\t).toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tA été vivant{\" \"}\r\n\t\t\t\t\t\t{player?.streak.vivant.count > player?.streak.vivant.max\r\n\t\t\t\t\t\t\t? player?.streak.vivant.count\r\n\t\t\t\t\t\t\t: player?.streak.vivant.max}{\" \"}\r\n\t\t\t\t\t\tfois sans interruption\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tA été mort{\" \"}\r\n\t\t\t\t\t\t{player?.streak.mort.count > player?.streak.mort.max\r\n\t\t\t\t\t\t\t? player?.streak.mort.count\r\n\t\t\t\t\t\t\t: player?.streak.mort.max}{\" \"}\r\n\t\t\t\t\t\tfois sans interruption\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</ChartContainer>\r\n\t\t\t\t<VSeparator />\r\n\t\t\t\t<ChartContainer>\r\n\t\t\t\t\t<h3>Victoire</h3>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\theight={\"auto\"}\r\n\t\t\t\t\t\tchartType=\"PieChart\"\r\n\t\t\t\t\t\tloader={<div>Waiting Data</div>}\r\n\t\t\t\t\t\tdata={looseStats}\r\n\t\t\t\t\t\toptions={{ ...PieStyle }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tRatio :{\" \"}\r\n\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\tplayer?.total_mission_status.SUCCES /\r\n\t\t\t\t\t\t\tplayer?.total_mission_status.ECHEC\r\n\t\t\t\t\t\t).toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</ChartContainer>\r\n\t\t\t\t<ChartContainer wide={\"100%\"}>\r\n\t\t\t\t\t<h3>Roles</h3>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\theight={\"300px\"}\r\n\t\t\t\t\t\tchartType=\"ColumnChart\"\r\n\t\t\t\t\t\tloader={<div>Waiting Data</div>}\r\n\t\t\t\t\t\tdata={roleStats}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tisStacked: true,\r\n\t\t\t\t\t\t\tlegend: \"none\",\r\n\t\t\t\t\t\t\tvAxis: { title: \"Nombre de missions\" },\r\n\t\t\t\t\t\t\thAxis: {\r\n\t\t\t\t\t\t\t\ttitle: \"Role\",\r\n\t\t\t\t\t\t\t\ttextPosition: \"none\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcolors: [\"#ADEBAD\"],\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ChartContainer>\r\n\t\t\t\t<ChartContainer>\r\n\t\t\t\t\t<h3>Nombre de missions par mois</h3>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\theight={\"250px\"}\r\n\t\t\t\t\t\tchartType=\"LineChart\"\r\n\t\t\t\t\t\tloader={<div>Waiting Data</div>}\r\n\t\t\t\t\t\tdata={monthStats}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tisStacked: true,\r\n\t\t\t\t\t\t\tvAxis: {\r\n\t\t\t\t\t\t\t\ttitle: \"Nombre de missions\",\r\n\t\t\t\t\t\t\t\tminValue: 0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\thAxis: {\r\n\t\t\t\t\t\t\t\ttitle: \"Mois\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tseries: {\r\n\t\t\t\t\t\t\t\t1: { lineDashStyle: [4, 4] },\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t...PieStyle,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>*//TODO Explication Max</p>\r\n\t\t\t\t</ChartContainer>\r\n\t\t\t\t<ChartContainer>\r\n\t\t\t\t\t<h3>Nombre de missions par journée</h3>\r\n\t\t\t\t\t<TimeGraph stats={dayStats} />\r\n\t\t\t\t</ChartContainer>\r\n\t\t\t</Container>\r\n\t\t</Base>\r\n\t);\r\n};\r\n\r\nexport default PlayerDetail;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayerList, selectPlayerFetching, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport Loading from '@/components/Loading';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n    color: var(--background-light);\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst AllPlayers = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const playerList = useAppSelector(selectPlayerList);\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    const [topPlayer, setTopPlayer] = React.useState<unknown[]>();\r\n    const [averagePlayer, setAveragePlayer] = React.useState<number>();\r\n\r\n    React.useEffect((): void => {\r\n        if (playerList.players.length <= 0) {\r\n            dispatch(fetchPlayerList());\r\n        } else {\r\n            setTopPlayer(getTop3Stats());\r\n            setAveragePlayer(getAverage());\r\n        }\r\n    }, [playerList]);\r\n\r\n    const getTop3Stats = (): unknown[] => {\r\n        const headers = ['Joueur', 'Nombre de missions'];\r\n        if (playerList.players.length > 0) {\r\n            return [headers, ...playerList.players.slice().sort((a, b) => b.count_missions - a.count_missions).slice(0, 3).map(p => ([p.name, p.count_missions]))];\r\n        }\r\n        return [headers, [\"\", 0]];\r\n    }\r\n\r\n    const getAverage = (): number => {\r\n        if (playerList.players.length > 0) {\r\n            let sumMiss = 0;\r\n            for (const player of playerList.players) {\r\n                sumMiss += player.count_missions;\r\n            }\r\n            return sumMiss / playerList.players.length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <UpdateLabel>Mis à jour le : {dayjs(playerList?.updated).format('DD/MM/YYYY - HH:mm:ss')}</UpdateLabel>\r\n            <h2>{playerList?.players.length} joueurs ont été trouvés</h2>\r\n            <Container>\r\n                <Chart\r\n                    width={'auto'}\r\n                    height={'auto'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={topPlayer}\r\n                    options={{\r\n                        isStacked: true,\r\n                        chart: { title: '3 plus gros joueurs' },\r\n                        legend: 'none',\r\n                        vAxis: { title: \"Nombre de missions\" },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n            <p>Chaque joueur a joué {averagePlayer?.toLocaleString(undefined, { maximumFractionDigits: 0 })} missions en moyenne</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlayers;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Creatable from 'react-select/creatable';\r\n\r\nimport { fetchPlayerList, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Search = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 15%;\r\n\r\n    & > label {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        & > * {\r\n            margin: 5px 0 10px 0;\r\n            & > div:first-of-type {\r\n                border-radius: 5px 5px 0 0;\r\n                border: 0;\r\n                border-bottom: 1px solid var(--text);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ninterface ISelectItem {\r\n    name: string,\r\n    value: number | string\r\n}\r\n\r\ntype PropsType = {\r\n    setPlayer: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst SearchPlayer = (props: PropsType): JSX.Element => {\r\n    const { setPlayer } = props;\r\n    const dispatch = useAppDispatch();\r\n    const location = useLocation();\r\n\r\n    const players = useAppSelector(selectPlayerList)\r\n\r\n    const [playersItems, setPlayersItems] = React.useState<ISelectItem[]>(new Array(0));\r\n\r\n    const selectRef = React.useRef<Creatable<ISelectItem, false>>(null);\r\n\r\n    const handlePlayerChange = (elmnt: ISelectItem | null): void => {\r\n        if (elmnt) {\r\n            if (elmnt.value === 0) {\r\n                dispatch(fetchPlayerList());\r\n            } else {\r\n                setPlayer(elmnt.value.toString());\r\n                window.history.replaceState(null, \"\", '#' + location.pathname.replace(/(\\b\\/.*$|$)/, '/' + elmnt.value.toString()));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Delete' && selectRef.current) {\r\n            if (selectRef.current.select) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                ((selectRef.current.select as any).select as any).clearValue()\r\n                setPlayer(\"\");\r\n                window.history.replaceState(null, \"\", '#' + location.pathname.replace(/(\\b\\/.*$|$)/, ''));\r\n            }\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (players.players.length > 0) {\r\n            setPlayersItems(players.players.map(p => ({ name: p.name, value: p.id })));\r\n        } else {\r\n            setPlayersItems([{ name: \"Récuperer les joueurs\", value: 0 }]);\r\n        }\r\n    }, [players]);\r\n\r\n    return (\r\n        <Search>\r\n            <label>Joueur :\r\n                <Creatable<ISelectItem, false>\r\n                    ref={selectRef}\r\n                    options={playersItems}\r\n                    onChange={handlePlayerChange}\r\n                    onKeyDown={handleKeyDown}\r\n                    components={{\r\n                        DropdownIndicator: () => null,\r\n                        IndicatorSeparator: () => null,\r\n                        Placeholder: () => null\r\n                    }}\r\n                    getOptionLabel={(p: ISelectItem) => `${p.value != 0 ? (typeof p.value === 'string' && !parseInt(p.value) ? p.value : `#${p.value}`) : ''}${p.value && p.name ? ' - ' : ''}${(p.name || '')}`}\r\n                />\r\n            </label>\r\n        </Search>\r\n    );\r\n}\r\n\r\nexport default SearchPlayer;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport PlayerDetail from \"./Player\";\r\nimport AllPlayers from \"./Players\";\r\nimport { HSeparator } from '@/components';\r\nimport SearchPlayer from './SearchPlayer';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    playerID: string\r\n}\r\n\r\nconst Player = (props: PropsType): JSX.Element => {\r\n    const { playerID } = props;\r\n\r\n    const [player, setPlayer] = React.useState(playerID);\r\n\r\n    return (\r\n        <Flex>\r\n            <SearchPlayer setPlayer={setPlayer} />\r\n            <HSeparator width={\"50%\"} />\r\n            {\r\n                player ? <PlayerDetail id={player} /> : <AllPlayers />\r\n            }\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Player from '../../features/players';\r\n\r\nconst Title = styled.h1`\r\n    visibility: hidden;\r\n    margin: 0;\r\n`;\r\n\r\ntype ParamsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayersView = (): JSX.Element => {\r\n    const { id }: ParamsType = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Title>Joueurs</Title>\r\n            <Player playerID={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayersView;","export default __webpack_public_path__ + \"static/media/canardhurt.ed18cd85.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport canardhurt from '@res/canardhurt.png'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>404</h1>\r\n            <h2>Page non trouvée</h2>\r\n            <img src={canardhurt} />\r\n            <p>Alors là, on vous a perdu...</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotImplemented = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>501</h1>\r\n            <h2>Page en cours de construction</h2>\r\n            <p>\r\n                &quot;Vous pouvez attendre le temps que je bosse ?&quot;<br />\r\n                <a href=\"https://github.com/oxypomme\">OxyTom</a>, 2021\r\n            </p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotImplemented;","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IMapType from \"@/models/IMapType\";\r\n\r\nexport const fetchMapList = createAsyncThunk(\r\n    'maps/fetchMapList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/maps'))).json()\r\n);\r\n\r\ntype MapListType = { maps: IMapType[], updated: string };\r\ninterface MapsState {\r\n    mapList: MapListType,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const mapSlice = createSlice({\r\n    name: 'map',\r\n    initialState: {\r\n        mapList: { maps: [], updated: '' },\r\n        isFetching: false\r\n    } as MapsState,\r\n    extraReducers: {\r\n        [fetchMapList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchMapList.fulfilled.type]: (state, { payload: mapList }: PayloadAction<MapListType>): MapsState => ({\r\n            ...state,\r\n            mapList,\r\n            isFetching: false\r\n        }),\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchMapList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): MapsState => state.map;\r\n\r\nexport const selectMapList = createSelector(getState, state => state.mapList);\r\nexport const selectMapFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default mapSlice.reducer;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchMapList, selectMapFetching, selectMapList } from '@/app/reducers/mapsSlice';\r\nimport Loading from '@/components/Loading';\r\nimport { ChartStat } from '@/models/StatType';\r\nimport { Chart } from 'react-google-charts';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n    color: var(--background-light);\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst MapsCharts = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const mapsList = useAppSelector(selectMapList);\r\n    const isMapsFetching = useAppSelector(selectMapFetching);\r\n\r\n    const [topMaps, setTopMaps] = React.useState<ChartStat[]>()\r\n\r\n    React.useEffect((): void => {\r\n        if (mapsList?.maps.length <= 0) {\r\n            dispatch(fetchMapList());\r\n        } else {\r\n            setTopMaps(getWorst5Stats());\r\n\r\n        }\r\n    }, [mapsList])\r\n\r\n    const getWorst5Stats = (): ChartStat[] => {\r\n        const header = ['Map', 'Nombre de missions']\r\n        if (mapsList?.maps.length > 0) {\r\n            return [header, ...mapsList?.maps.slice().sort((a, b) => a.mission_count - b.mission_count).slice(0, 5).map(p => ([p.name, p.mission_count]))];\r\n        }\r\n        return [header, ['', 0]]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isMapsFetching ? <Loading /> : <></>}\r\n            <UpdateLabel>Mis à jour le : {dayjs(mapsList?.updated).format('DD/MM/YYYY - HH:mm')}</UpdateLabel>\r\n            <Container>\r\n                <h2>Maps les moins jouées</h2>\r\n                <Chart\r\n                    width={'600px'}\r\n                    height={'300px'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={topMaps}\r\n                    options={{\r\n                        isStacked: true,\r\n                        hAxis: { title: 'Map' },\r\n                        legend: 'none',\r\n                        vAxis: { title: \"Nombre de missions\" },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapsCharts;","import React from 'react';\r\n//import styled from '@emotion/styled';\r\n\r\nimport MapsCharts from '@/features/maps';\r\n\r\nconst Maps = (): JSX.Element => {\r\n    return (\r\n        <>\r\n            <MapsCharts />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Maps;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFontAwesome } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Foot = styled.footer`\r\n    background-color: var(--background-dark);\r\n    text-align: center;\r\n    font-size: 14px;\r\n    height: var(--footer-size);\r\n    padding: 5px;\r\n    \r\n    position:absolute;\r\n    width:100%;\r\n    bottom:0px;\r\n`;\r\n\r\nconst LinkText = styled.span`\r\n    text-decoration: underline;\r\n`;\r\n\r\nconst IconWithLink = styled.a<{ margin?: string, VAlign?: boolean }>`\r\n    ${props => props.VAlign ? \"vertical-align: middle;\" : ''}\r\n    text-decoration: none;\r\n    & > svg{\r\n        ${props => props.margin ? \"margin:\" + props.margin + \";\" : ''}\r\n        transition: opacity 0.25s;\r\n    }\r\n    &:hover > svg{\r\n        opacity: 0.75;\r\n    }\r\n`;\r\n\r\nconst Footer = (): JSX.Element => {\r\n    return (\r\n        <Foot>\r\n            <p>\r\n                All icons used are from <IconWithLink href=\"https://fontawesome.com\"><FontAwesomeIcon icon={faFontAwesome} color=\"#339af0\" /> <LinkText>Font Awesome</LinkText></IconWithLink>.\r\n            </p>\r\n            <p>\r\n                <a href=\"https://github.com/oxypomme/gdcgraph/graphs/contributors\">Liste des contributeurs</a>\r\n            </p>\r\n        </Foot>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Navbar from \"./features/commons/Navbar\";\r\n\r\nimport Home from \"./views/home\";\r\nimport Players from \"./views/players\";\r\n\r\nimport NotFound from \"./views/errors/NotFound\";\r\nimport NotImplemented from './views/errors/NotImplemented';\r\nimport Maps from './views/maps';\r\nimport Footer from './features/commons/Footer';\r\n\r\nconst AppContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Router basename='/'>\r\n      <Navbar />\r\n      <AppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path={[\"/players\", \"/players/:id\"]} component={Players} />\r\n          <Route exact path={[\"/missions\", \"/missions/:id\"]} component={NotImplemented} />\r\n          <Route exact path={\"/maps\"} component={Maps} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </AppContainer>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport playerReducer from \"./playerSlice\";\r\nimport mapReducer from \"./mapsSlice\";\r\n\r\nconst reducer = combineReducers({\r\n    player: playerReducer,\r\n    map: mapReducer\r\n});\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers';\r\n\r\nconst store = configureStore({\r\n    reducer\r\n});\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(reducer))\r\n}\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport dayjs from 'dayjs';\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport { } from \"dayjs/locale/fr\";\r\ndayjs.extend(customParseFormat);\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from './app/store';\r\n\r\ndayjs.locale('fr');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// TODO: npm run deploy"],"sourceRoot":""}