{"version":3,"sources":["models/EMissionStatus.ts","features/commons/Navbar.tsx","views/errors/NotImplemented.tsx","views/home/index.tsx","app/hooks.ts","app/reducers/playerSlice.ts","models/EPlayerStatus.ts","features/players/PieStyle.ts","components/Loading.tsx","features/players/Player.tsx","features/players/Players.tsx","components/index.ts","features/players/index.tsx","views/players/index.tsx","../res/canardhurt.png","views/errors/NotFound.tsx","App.tsx","reportWebVitals.ts","app/reducers/index.ts","app/store.ts","index.tsx"],"names":["EMissionStatus","Nav","styled","nav","NavList","ul","NavItem","li","Navbar","id","exact","to","icon","faChartPie","faUsers","faGlobeEurope","Container","div","NotImplemented","href","Home","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchPlayerList","createAsyncThunk","a","fetch","urljoin","urlAPI","json","fetchPlayer","getState","pId","parseInt","currPlayers","player","players","currIndex","findIndex","val","infos","name","playerSlice","createSlice","initialState","playerList","lastFetchIndex","isFetching","extraReducers","pending","type","state","fulfilled","payload","rejected","error","console","length","reducers","selectPlayerList","createSelector","selectPlayer","selectPlayerFetching","EPlayerStatus","PieStyle","colors","legend","position","pieSliceTextStyle","color","InfiniteRotate","keyframes","Background","Loading","faSyncAlt","size","PlayerDetail","props","dispatch","isPlayerLoading","React","useEffect","getTotalPlayerStatus","status","missions","filter","m","player_status","getTotalMissionStatus","mission_status","count_missions","ALIVE","DEAD","toLocaleString","undefined","maximumFractionDigits","width","height","chartType","loader","data","alive","death","push","getDeathStats","options","SUCCESS","FAILED","win","loose","getLooseStats","AllPlayers","headers","slice","sort","b","map","p","getTop3Stats","isStacked","chart","title","vAxis","sumMiss","getAverage","HSeparator","Flex","Search","Player","playerID","useState","playerText","setPlayerText","setPlayer","value","onChange","event","target","onBlur","onKeyPress","key","PlayersView","useParams","style","visibility","NotFound","src","canardhurt","AppContainer","App","basename","path","component","Players","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","playerReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e55d131f.chunk.js","sourcesContent":["enum EMissionStatus {\r\n    UNKNOWN = 0,\r\n    SUCCESS,\r\n    FAILED\r\n}\r\n\r\nexport default EMissionStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartPie, faGlobeEurope, faUsers } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = styled.nav`\r\n    height: var(--nav-size);\r\n    width: 100%;\r\n    position: fixed;\r\n    float: left;\r\n    top: 0;\r\n    z-index: 9999;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    height: 100%;\r\n    list-style-type: none;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    background-color: var(--background-dark);\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n    height: 100%;\r\n    float: left;\r\n\r\n    & > a {\r\n        display: inline-block;\r\n        color: var(--text);\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n        height: 100%;\r\n    }\r\n\r\n    & > a:hover {\r\n        background-color: var(--background-light);\r\n    }\r\n\r\n    & > a.active {\r\n        background-color: var(--accent1);\r\n    }\r\n\r\n    & svg {\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\nconst Navbar = (): JSX.Element => {\r\n    return (\r\n        <Nav id=\"navbar\">\r\n            <NavList>\r\n                <NavItem><NavLink exact to=\"/\"><FontAwesomeIcon icon={faChartPie} />GDC Graph</NavLink></NavItem>\r\n                <NavItem><NavLink to=\"/players\"><FontAwesomeIcon icon={faUsers} />Joueurs</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/missions\"><FontAwesomeIcon icon={faGlobeEurope} />Missions</NavLink></NavItem>\r\n            </NavList>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotImplemented = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>501</h1>\r\n            <h2>Page en cours de construction</h2>\r\n            <p>\r\n                &quot;Vous pouvez attendre le temps que je bosse ?&quot;<br />\r\n                <a href=\"github.com/oxypomme\">OxyTom</a>, 2021\r\n            </p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotImplemented;","import React from 'react';\r\nimport NotImplemented from '../errors/NotImplemented';\r\n\r\nconst Home = (): JSX.Element => {\r\n    return (\r\n        <>\r\n            <NotImplemented />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IPlayerType, { IPlayersType } from '@/models/IPlayerType'\r\nimport MissionType from '@/models/MissionType';\r\n\r\n// Define a type for the slice state\r\ninterface PlayerState {\r\n    playerList: IPlayersType[],\r\n    players: PlayerDetailType[],\r\n    lastFetchIndex: number,\r\n    isFetching: boolean\r\n}\r\n\r\nexport interface PlayerDetailType {\r\n    infos: IPlayerType,\r\n    missions: Array<MissionType>\r\n}\r\n\r\nexport const fetchPlayerList = createAsyncThunk(\r\n    'player/fetchPlayerList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/players'))).json()\r\n);\r\nexport const fetchPlayer = createAsyncThunk(\r\n    'player/fetchPlayer',\r\n    async (id: string, { getState }) => {\r\n        let pId = id;\r\n        if (!parseInt(id)) {\r\n            pId = (await (await fetch(urljoin(urlAPI, `/players/name/${id}`))).json()).id;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const currPlayers = ((getState() as any).player as PlayerState).players;\r\n        const currIndex = currPlayers.findIndex(val => val.infos.id == parseInt(pId));\r\n        if (currIndex !== -1) {\r\n            return currPlayers[currIndex];\r\n        }\r\n\r\n        const player = await (await fetch(urljoin(urlAPI, `/players/${pId}`))).json();\r\n        if (player.infos.name)\r\n            return player;\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const playerSlice = createSlice({\r\n    name: 'player',\r\n    initialState: {\r\n        playerList: [],\r\n        players: [],\r\n        lastFetchIndex: -1,\r\n        isFetching: false\r\n    } as PlayerState,\r\n    extraReducers: {\r\n        [fetchPlayerList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayerList.fulfilled.type]: (state, { payload: playerList }: PayloadAction<IPlayersType[]>): PlayerState => ({\r\n            ...state,\r\n            playerList,\r\n            isFetching: false\r\n        }),\r\n        [fetchPlayerList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayer.fulfilled.type]: (state, { payload: player }: PayloadAction<PlayerDetailType | null>): PlayerState => {\r\n            let players = [...state.players];\r\n            let lastFetchIndex = -1;\r\n\r\n            if (player) {\r\n                lastFetchIndex = players.findIndex(val => val.infos.id == player.infos.id);\r\n\r\n                if (lastFetchIndex === -1) {\r\n                    lastFetchIndex = players.length;\r\n                    players = [...players, player];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                players,\r\n                lastFetchIndex,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): PlayerState => state.player;\r\n\r\nexport const selectPlayerList = createSelector(getState, state => state.playerList);\r\nexport const selectPlayer = createSelector(getState, state => state.players[state.lastFetchIndex]);\r\nexport const selectPlayerFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default playerSlice.reducer;","enum EPlayerStatus {\r\n    UNKNOWN = 0,\r\n    ALIVE,\r\n    DEAD\r\n}\r\nexport default EPlayerStatus;","const PieStyle = {\r\n    colors: [\r\n        '#81d5ff',\r\n        '#ee9e9e',\r\n        '#fceb96'\r\n    ],\r\n    legend: {\r\n        position: 'bottom'\r\n    },\r\n    pieSliceTextStyle: {\r\n        color: 'black'\r\n    }\r\n}\r\n\r\nexport default PieStyle;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { keyframes } from '@emotion/react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left:0 ;\r\n    z-index: 9998;\r\n    background-color: black;\r\n    opacity: 0.5;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > svg {\r\n        animation: ${InfiniteRotate} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst Loading = (): JSX.Element => {\r\n    return (\r\n        <Background>\r\n            <FontAwesomeIcon icon={faSyncAlt} color={'white'} size={'6x'} />\r\n        </Background>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayer, selectPlayer, selectPlayerFetching } from '@/app/reducers/playerSlice';\r\n\r\nimport EMissionStatus from '@/models/EMissionStatus';\r\nimport EPlayerStatus from '@/models/EPlayerStatus';\r\nimport PieStyle from './PieStyle';\r\nimport Loading from '@/components/Loading';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayerDetail = (props: PropsType): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const { id } = props;\r\n    const player = useAppSelector(selectPlayer)\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    React.useEffect((): void => {\r\n        dispatch(fetchPlayer(id))\r\n    }, [id]);\r\n\r\n    const getTotalPlayerStatus = (status: EPlayerStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.player_status === status).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getTotalMissionStatus = (status: EMissionStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.mission_status === status).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getTotalPlayerStatusWithMission = (pStatus: EPlayerStatus, mStatus: EMissionStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.player_status === pStatus && m.mission_status === mStatus).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getDeathStats = (): unknown[] => {\r\n        const data: unknown[] = [[\"Status fin\", \"Nombre\"]];\r\n        if (player) {\r\n            const alive = getTotalPlayerStatus(EPlayerStatus.ALIVE);\r\n            const death = getTotalPlayerStatus(EPlayerStatus.DEAD);\r\n            if (alive) {\r\n                data.push(['Vivant', alive]);\r\n            }\r\n            if (death) {\r\n                data.push(['Mort', death]);\r\n            }\r\n            if (alive + death !== player.infos.count_missions) {\r\n                data.push(['Inconnu', player.infos.count_missions - (alive + death)]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    const getLooseStats = (): unknown[] => {\r\n        const data: unknown[] = [[\"Verdict\", \"Nombre\"]];\r\n        if (player) {\r\n            const win = getTotalMissionStatus(EMissionStatus.SUCCESS);\r\n            const loose = getTotalMissionStatus(EMissionStatus.FAILED);\r\n            if (win) {\r\n                data.push(['Succès', win]);\r\n            }\r\n            if (loose) {\r\n                data.push(['Echec', loose]);\r\n            }\r\n            if (win + loose !== player.infos.count_missions) {\r\n                data.push(['Inconnu', player.infos.count_missions - (win + loose)]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <h2>#{player?.infos.id} - {player?.infos.name}</h2>\r\n            <p>{player?.infos.count_missions} missions au compteur</p>\r\n            <Container>\r\n                <div>\r\n                    <h3>Mort ou vif ?</h3>\r\n                    <p>\r\n                        Ratio : {(getTotalPlayerStatus(EPlayerStatus.ALIVE) / getTotalPlayerStatus(EPlayerStatus.DEAD))\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                    <Chart\r\n                        width={'300px'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={getDeathStats()}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h3>Victoire ?</h3>\r\n                    <p>\r\n                        Ratio : {(getTotalMissionStatus(EMissionStatus.SUCCESS) / getTotalMissionStatus(EMissionStatus.FAILED))\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                    <Chart\r\n                        width={'300px'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={getLooseStats()}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                </div>\r\n            </Container>\r\n            {/*<div>\r\n                <p>\r\n                    {player?.infos.name} est mort {getTotalPlayerStatusWithMission(EPlayerStatus.DEAD, EMissionStatus.SUCCESS)} fois alors\r\n                    que la mission s&apos;est soldé par un succès,<br /> ce qui représente {((getTotalPlayerStatusWithMission(EPlayerStatus.DEAD, EMissionStatus.SUCCESS) / getTotalMissionStatus(EMissionStatus.SUCCESS)) * 100)\r\n                        .toLocaleString(undefined, { maximumFractionDigits: 0 })}% des ses missions accomplies !\r\n                </p>\r\n            </div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerDetail;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayerList, selectPlayerFetching, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport Loading from '@/components/Loading';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n`;\r\n\r\nconst AllPlayers = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const playerList = useAppSelector(selectPlayerList);\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    React.useEffect((): void => {\r\n        if (playerList.length <= 0) {\r\n            dispatch(fetchPlayerList());\r\n        }\r\n    }, [playerList]);\r\n\r\n    const getTop3Stats = (): unknown[] => {\r\n        const headers = ['Player', 'Count'];\r\n        if (playerList.length > 0) {\r\n            return [headers, ...playerList.slice().sort((a, b) => b.count_missions - a.count_missions).slice(0, 3).map(p => ([p.name, p.count_missions]))];\r\n        }\r\n        return [headers];\r\n    }\r\n\r\n    const getAverage = (): number => {\r\n        if (playerList.length > 0) {\r\n            let sumMiss = 0;\r\n            for (const player of playerList) {\r\n                sumMiss += player.count_missions;\r\n            }\r\n            return sumMiss / playerList.length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <h2>{playerList?.length} joueurs ont étés trouvés</h2>\r\n            <Container>\r\n                <Chart\r\n                    width={'auto'}\r\n                    height={'auto'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={getTop3Stats()}\r\n                    options={{\r\n                        isStacked: true,\r\n                        chart: {\r\n                            title: '3 plus gros joueurs',\r\n                        },\r\n                        legend: 'none',\r\n                        vAxis: {\r\n                            title: \"Nombre de missions\",\r\n                        },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n            <p>Chaque joueur a joué {getAverage().toLocaleString(undefined, { maximumFractionDigits: 0 })} missions en moyenne</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlayers;","import styled from \"@emotion/styled\";\r\n\r\nexport const HSeparator = styled.div<{ color?: string, width?: string }>`\r\n    border-bottom: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.width ? `width: ${props.width} ;` : ''}\r\n`;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport PlayerDetail from \"./Player\";\r\nimport AllPlayers from \"./Players\";\r\nimport { HSeparator } from '@/components';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Search = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    & > label {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: min-content;\r\n        text-align: left;\r\n        & > input {\r\n            margin: 5px 0 20px 0;\r\n            border-radius: 5px 5px 0 0;\r\n            border: 0;\r\n            border-bottom: 1px solid var(--text);\r\n            padding: 8px;\r\n            outline: 0;\r\n            transition: .1s background;\r\n\r\n            &:focus{\r\n                background: var(--background-dark);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    playerID: string\r\n}\r\n\r\nconst Player = (props: PropsType): JSX.Element => {\r\n    const { playerID } = props;\r\n\r\n    const [playerText, setPlayerText] = React.useState(playerID);\r\n    const [player, setPlayer] = React.useState(playerID);\r\n\r\n    const handleNameChange = (event: React.SyntheticEvent): void => {\r\n        setPlayerText((event.target as HTMLInputElement).value);\r\n    }\r\n\r\n    const handleNameBlur = (event: React.SyntheticEvent): void => {\r\n        setPlayer((event.target as HTMLInputElement).value)\r\n    }\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent): void => {\r\n        if (event.key === 'Enter') {\r\n            setPlayer((event.target as HTMLInputElement).value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex>\r\n            <Search>\r\n                <label>Nom ou # du joueur :\r\n                    <input type=\"text\" value={playerText} onChange={handleNameChange} onBlur={handleNameBlur} onKeyPress={handleKeyPress} />\r\n                </label>\r\n            </Search>\r\n            <HSeparator width={\"50%\"} />\r\n            {\r\n                player ? <PlayerDetail id={player} /> : <AllPlayers />\r\n            }\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n//import styled from '@emotion/styled';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Player from '../../features/players';\r\n\r\ntype ParamsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayersView = (): JSX.Element => {\r\n    const { id }: ParamsType = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ visibility: 'hidden' }}>Joueurs</h1>\r\n            <Player playerID={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayersView;","export default __webpack_public_path__ + \"static/media/canardhurt.ed18cd85.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport canardhurt from '@res/canardhurt.png'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>404</h1>\r\n            <h2>Page non trouvée</h2>\r\n            <img src={canardhurt} />\r\n            <p>Alors là, on vous a perdu...</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Navbar from \"./features/commons/Navbar\";\r\n\r\nimport Home from \"./views/home\";\r\nimport Players from \"./views/players\";\r\n\r\nimport NotFound from \"./views/errors/NotFound\";\r\nimport NotImplemented from './views/errors/NotImplemented';\r\n\r\nconst AppContainer = styled.div`\r\n  margin-top: var(--nav-size);\r\n  text-align: center;\r\n  height: calc(100vh - var(--nav-size));\r\n`;\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Router basename='/'>\r\n      <Navbar />\r\n      <AppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path={[\"/players\", \"/players/:id\"]} component={Players} />\r\n          <Route exact path={[\"/missions\", \"/missions/:id\"]} component={NotImplemented} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </AppContainer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport playerReducer from \"./playerSlice\";\r\n\r\nconst reducer = combineReducers({\r\n    player: playerReducer\r\n});\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers';\r\n\r\nconst store = configureStore({\r\n    reducer\r\n});\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(reducer))\r\n}\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// TODO: npm run deploy"],"sourceRoot":""}