{"version":3,"sources":["models/EMissionStatus.ts","features/commons/Navbar.tsx","views/errors/NotImplemented.tsx","views/home/index.tsx","app/hooks.ts","app/reducers/playerSlice.ts","models/EPlayerStatus.ts","features/players/PieStyle.ts","components/Loading.tsx","components/Tag.tsx","features/players/Player.tsx","features/players/Players.tsx","components/index.ts","features/players/SearchPlayer.tsx","features/players/index.tsx","views/players/index.tsx","../res/canardhurt.png","views/errors/NotFound.tsx","App.tsx","reportWebVitals.ts","app/reducers/index.ts","app/store.ts","index.tsx"],"names":["EMissionStatus","Nav","styled","nav","NavList","ul","NavItem","li","props","right","Navbar","id","exact","to","icon","faChartPie","faUsers","faGlobeEurope","href","faChartLine","Container","div","NotImplemented","Home","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchPlayerList","createAsyncThunk","a","fetch","urljoin","urlAPI","json","fetchPlayer","getState","pId","parseInt","currPlayers","player","players","currIndex","findIndex","val","infos","name","playerSlice","createSlice","initialState","playerList","lastFetchIndex","isFetching","extraReducers","pending","type","state","fulfilled","payload","rejected","error","console","length","reducers","selectPlayerList","createSelector","selectPlayer","selectPlayerFetching","EPlayerStatus","PieStyle","colors","legend","position","pieSliceTextStyle","color","InfiniteRotate","keyframes","Background","Loading","faSyncAlt","size","span","Tag","element","React","useState","setColor","content","setContent","useEffect","SUCCESS","ALIVE","FAILED","DEAD","Base","ChartContainer","wide","PlayerDetail","dispatch","isPlayerLoading","roleStats","setRoleStats","deathStats","setDeathStats","looseStats","setLooseStats","toLowerWOAccent","str","toLowerCase","trim","normalize","replace","getTotalPlayerStatus","status","missions","filter","m","player_status","getTotalMissionStatus","mission_status","data","errors","Array","rolesCount","Inconnu","miss","isMissionDone","i","Object","values","roles","roleConfigKey","keys","map","roleConfigVal","role","includes","isNaN","push","mission","log","sort","b","getRoleStats","alive","death","count_missions","getDeathStats","win","loose","getLooseStats","date","width","height","chartType","loader","options","toLocaleString","undefined","maximumFractionDigits","isStacked","vAxis","title","hAxis","textPosition","AllPlayers","headers","slice","p","getTop3Stats","chart","sumMiss","getAverage","HSeparator","Search","SearchPlayer","setPlayer","playersItems","setPlayersItems","selectRef","useRef","value","ref","onChange","elmnt","toString","onKeyDown","event","key","current","select","clearValue","components","DropdownIndicator","IndicatorSeparator","Placeholder","getOptionLabel","Flex","Player","playerID","PlayersView","useParams","style","visibility","NotFound","src","canardhurt","AppContainer","App","basename","path","component","Players","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","playerReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b0b9a08.chunk.js","sourcesContent":["enum EMissionStatus {\r\n    UNKNOWN = 0,\r\n    SUCCESS,\r\n    FAILED\r\n}\r\n\r\nexport default EMissionStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartLine, faChartPie, faGlobeEurope, faUsers } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = styled.nav`\r\n    height: var(--nav-size);\r\n    width: 100%;\r\n    position: fixed;\r\n    float: left;\r\n    top: 0;\r\n    z-index: 9999;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    height: 100%;\r\n    list-style-type: none;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    background-color: var(--background-dark);\r\n`;\r\n\r\nconst NavItem = styled.li<{ right?: boolean }>`\r\n    height: 100%;\r\n    float: ${props => props.right ? 'right' : 'left'};\r\n\r\n    & > a {\r\n        display: inline-block;\r\n        color: var(--text);\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n        height: 100%;\r\n        &:hover {\r\n            background-color: var(--background-light);\r\n        }\r\n        &.active {\r\n            background-color: var(--accent1);\r\n        }\r\n    }\r\n\r\n    & svg {\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\nconst Navbar = (): JSX.Element => {\r\n    return (\r\n        <Nav id=\"navbar\">\r\n            <NavList>\r\n                <NavItem><NavLink exact to=\"/\"><FontAwesomeIcon icon={faChartPie} />GDC Graph</NavLink></NavItem>\r\n                <NavItem><NavLink to=\"/players\"><FontAwesomeIcon icon={faUsers} />Joueurs</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/missions\"><FontAwesomeIcon icon={faGlobeEurope} />Missions</NavLink></NavItem>\r\n                <NavItem right><a href=\"https://grecedecanards.fr/GDCStats/\"><FontAwesomeIcon icon={faChartLine} />GDC Stats</a></NavItem>\r\n            </NavList>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotImplemented = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>501</h1>\r\n            <h2>Page en cours de construction</h2>\r\n            <p>\r\n                &quot;Vous pouvez attendre le temps que je bosse ?&quot;<br />\r\n                <a href=\"https://github.com/oxypomme\">OxyTom</a>, 2021\r\n            </p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotImplemented;","import React from 'react';\r\nimport NotImplemented from '../errors/NotImplemented';\r\n\r\nconst Home = (): JSX.Element => {\r\n    return (\r\n        <>\r\n            <NotImplemented />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IPlayerType, { IPlayersType } from '@/models/IPlayerType'\r\nimport MissionType from '@/models/MissionType';\r\n\r\n// Define a type for the slice state\r\ninterface PlayerState {\r\n    playerList: IPlayersType[],\r\n    players: PlayerDetailType[],\r\n    lastFetchIndex: number,\r\n    isFetching: boolean\r\n}\r\n\r\nexport interface PlayerDetailType {\r\n    infos: IPlayerType,\r\n    missions: Array<MissionType>\r\n}\r\n\r\nexport const fetchPlayerList = createAsyncThunk(\r\n    'player/fetchPlayerList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/players'))).json()\r\n);\r\nexport const fetchPlayer = createAsyncThunk(\r\n    'player/fetchPlayer',\r\n    async (id: string, { getState }) => {\r\n        let pId = id;\r\n        if (!parseInt(id)) {\r\n            pId = (await (await fetch(urljoin(urlAPI, `/players/name/${id}`))).json()).id;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const currPlayers = ((getState() as any).player as PlayerState).players;\r\n        const currIndex = currPlayers.findIndex(val => val.infos.id == parseInt(pId));\r\n        if (currIndex !== -1) {\r\n            return currPlayers[currIndex];\r\n        }\r\n\r\n        const player = await (await fetch(urljoin(urlAPI, `/players/${pId}`))).json();\r\n        if (player.infos.name)\r\n            return player;\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const playerSlice = createSlice({\r\n    name: 'player',\r\n    initialState: {\r\n        playerList: [],\r\n        players: [],\r\n        lastFetchIndex: -1,\r\n        isFetching: false\r\n    } as PlayerState,\r\n    extraReducers: {\r\n        [fetchPlayerList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayerList.fulfilled.type]: (state, { payload: playerList }: PayloadAction<IPlayersType[]>): PlayerState => ({\r\n            ...state,\r\n            playerList,\r\n            isFetching: false\r\n        }),\r\n        [fetchPlayerList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayer.fulfilled.type]: (state, { payload: player }: PayloadAction<PlayerDetailType | null>): PlayerState => {\r\n            let players = [...state.players];\r\n            let lastFetchIndex = -1;\r\n\r\n            if (player) {\r\n                lastFetchIndex = players.findIndex(val => val.infos.id == player.infos.id);\r\n\r\n                if (lastFetchIndex === -1) {\r\n                    lastFetchIndex = players.length;\r\n                    players = [...players, player];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                players,\r\n                lastFetchIndex,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): PlayerState => state.player;\r\n\r\nexport const selectPlayerList = createSelector(getState, state => state.playerList);\r\nexport const selectPlayer = createSelector(getState, state => state.players[state.lastFetchIndex]);\r\nexport const selectPlayerFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default playerSlice.reducer;","enum EPlayerStatus {\r\n    UNKNOWN = 0,\r\n    ALIVE,\r\n    DEAD\r\n}\r\nexport default EPlayerStatus;","const PieStyle = {\r\n    colors: [\r\n        '#81d5ff',\r\n        '#ee9e9e',\r\n        '#fceb96'\r\n    ],\r\n    legend: {\r\n        position: 'bottom'\r\n    },\r\n    pieSliceTextStyle: {\r\n        color: 'black'\r\n    }\r\n}\r\n\r\nexport default PieStyle;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { keyframes } from '@emotion/react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left:0 ;\r\n    z-index: 9998;\r\n    background-color: black;\r\n    opacity: 0.5;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > svg {\r\n        animation: ${InfiniteRotate} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst Loading = (): JSX.Element => {\r\n    return (\r\n        <Background>\r\n            <FontAwesomeIcon icon={faSyncAlt} color={'white'} size={'6x'} />\r\n        </Background>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport EMissionStatus from '@/models/EMissionStatus';\r\nimport EPlayerStatus from '@/models/EPlayerStatus';\r\n\r\nconst Container = styled.span<{ color: string }>`\r\n    background-color: ${props => props.color};\r\n    font-size: 8pt;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n    vertical-align: text-top;\r\n`;\r\n\r\ntype PropsType = {\r\n    element: EMissionStatus | EPlayerStatus\r\n}\r\n\r\nconst Tag = (props: PropsType): JSX.Element => {\r\n    const { element } = props;\r\n    const [color, setColor] = React.useState('');\r\n    const [content, setContent] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        switch (element) {\r\n            case EMissionStatus.SUCCESS:\r\n                setColor('#81d5ff');\r\n                setContent('Succès');\r\n                break;\r\n            case EPlayerStatus.ALIVE:\r\n                setColor('#81d5ff');\r\n                setContent('Vivant');\r\n                break;\r\n\r\n            case EMissionStatus.FAILED:\r\n                setColor('#ee9e9e');\r\n                setContent('Echec');\r\n                break;\r\n            case EPlayerStatus.DEAD:\r\n                setColor('#ee9e9e');\r\n                setContent('Mort');\r\n                break;\r\n            default:\r\n                setColor('#fceb96');\r\n                setContent('Inconnu')\r\n                break;\r\n        }\r\n    }, [element]);\r\n\r\n    return (\r\n        <Container color={color}>\r\n            {content}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Tag;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayer, selectPlayer, selectPlayerFetching } from '@/app/reducers/playerSlice';\r\n\r\nimport roles from '@config/roles.json';\r\n\r\nimport EMissionStatus from '@/models/EMissionStatus';\r\nimport EPlayerStatus from '@/models/EPlayerStatus';\r\nimport PieStyle from './PieStyle';\r\nimport Loading from '@/components/Loading';\r\nimport Tag from '@/components/Tag';\r\n\r\nconst Base = styled.div`\r\n    width: 50%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst ChartContainer = styled.div<{ wide?: string }>`\r\n    flex-basis: ${props => props.wide ? '75%' : '50%'};\r\n    width: ${props => props.wide ? props.wide : '25%'};\r\n    & *[dir=\"ltr\"] {\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayerDetail = (props: PropsType): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const { id } = props;\r\n    const player = useAppSelector(selectPlayer)\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    const [roleStats, setRoleStats] = React.useState({});\r\n    const [deathStats, setDeathStats] = React.useState({});\r\n    const [looseStats, setLooseStats] = React.useState({});\r\n\r\n    React.useEffect((): void => {\r\n        dispatch(fetchPlayer(id))\r\n    }, [id]);\r\n\r\n    const toLowerWOAccent = (str: string): string => str.toLowerCase().trim().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n    const getTotalPlayerStatus = (status: EPlayerStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.player_status === status).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getTotalMissionStatus = (status: EMissionStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.mission_status === status).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getTotalPlayerStatusWithMission = (pStatus: EPlayerStatus, mStatus: EMissionStatus): number => {\r\n        if (player) {\r\n            return player.missions.filter(m => m.player_status === pStatus && m.mission_status === mStatus).length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const getDeathStats = (): unknown[] => {\r\n        const data: unknown[] = [[\"Status fin\", \"Nombre\"]];\r\n        if (player) {\r\n            const alive = getTotalPlayerStatus(EPlayerStatus.ALIVE);\r\n            const death = getTotalPlayerStatus(EPlayerStatus.DEAD);\r\n            if (alive) {\r\n                data.push(['Vivant', alive]);\r\n            }\r\n            if (death) {\r\n                data.push(['Mort', death]);\r\n            }\r\n            if (alive + death !== player.infos.count_missions) {\r\n                data.push(['Inconnu', player.infos.count_missions - (alive + death)]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    const getLooseStats = (): unknown[] => {\r\n        const data: unknown[] = [[\"Verdict\", \"Nombre\"]];\r\n        if (player) {\r\n            const win = getTotalMissionStatus(EMissionStatus.SUCCESS);\r\n            const loose = getTotalMissionStatus(EMissionStatus.FAILED);\r\n            if (win) {\r\n                data.push(['Succès', win]);\r\n            }\r\n            if (loose) {\r\n                data.push(['Echec', loose]);\r\n            }\r\n            if (win + loose !== player.infos.count_missions) {\r\n                data.push(['Inconnu', player.infos.count_missions - (win + loose)]);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    const getRoleStats = (): unknown[] => {\r\n        const data: any[][] = [[\"Role\", \"Nombre\"]];\r\n        if (player) {\r\n            const errors: { mission: number, role: string }[] = new Array(0);\r\n            const rolesCount: { [role: string]: number } = { Inconnu: player.missions.length };\r\n            for (const miss of player.missions) {\r\n                let isMissionDone = false;\r\n                for (let i = 0; i < Object.values(roles).length; i++) {\r\n                    const roleConfigKey = Object.keys(roles)[i];\r\n                    for (const roleConfigVal of Object.values(roles)[i].map(roleConfigVal => toLowerWOAccent(roleConfigVal))) {\r\n                        if (toLowerWOAccent(miss.role).includes(roleConfigVal)) {\r\n                            isMissionDone = true;\r\n                            if (isNaN(rolesCount[roleConfigKey])) {\r\n                                rolesCount[roleConfigKey] = 1;\r\n                            }\r\n                            else {\r\n                                rolesCount[roleConfigKey]++;\r\n                            }\r\n                            rolesCount.Inconnu--;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (isMissionDone) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (!isMissionDone) {\r\n                    errors.push({ mission: miss.id, role: miss.role });\r\n                }\r\n            }\r\n            for (let i = 0; i < Object.keys(rolesCount).length; i++) {\r\n                const role = Object.keys(rolesCount)[i];\r\n                if (Object.values(rolesCount)[i] > 0)\r\n                    data.push([role, Object.values(rolesCount)[i]])\r\n            }\r\n            if (errors.length > 0) {\r\n                console.log(`[Player.tsx/getRoleStats/${player.infos.name}] Roles skipped :`, errors, \"\\nIf you see this warning and you're not the owner of the website, please contact OxyTom#1831 on Discord.\");\r\n            }\r\n        }\r\n        return data.sort((a, b) => b[1] - a[1]);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!isPlayerLoading) {\r\n            setRoleStats(getRoleStats());\r\n            setDeathStats(getDeathStats());\r\n            setLooseStats(getLooseStats());\r\n        }\r\n    }, [isPlayerLoading]);\r\n\r\n    return (\r\n        <Base>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <h2>#{player?.infos.id} - {player?.infos.name}</h2>\r\n            <p>{player?.infos.count_missions} missions au compteur</p>\r\n            <p>Dernière mission joué le {player?.missions[0].date} <Tag element={player?.missions[0].mission_status} /></p>\r\n            <Container>\r\n                <ChartContainer>\r\n                    <h3>Mort ou vif</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={deathStats}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                    <p>\r\n                        Ratio : {(getTotalPlayerStatus(EPlayerStatus.ALIVE) / getTotalPlayerStatus(EPlayerStatus.DEAD))\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                </ChartContainer>\r\n                <ChartContainer>\r\n                    <h3>Victoire</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={looseStats}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                    <p>\r\n                        Ratio : {(getTotalMissionStatus(EMissionStatus.SUCCESS) / getTotalMissionStatus(EMissionStatus.FAILED))\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                </ChartContainer>\r\n                <ChartContainer wide={\"100%\"}>\r\n                    <h3>Roles</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'300px'}\r\n                        chartType=\"ColumnChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={roleStats}\r\n                        options={{\r\n                            isStacked: true,\r\n                            legend: 'none',\r\n                            vAxis: { title: \"Nombre de missions\" },\r\n                            hAxis: {\r\n                                title: \"Role\",\r\n                                textPosition: 'none'\r\n                            },\r\n                            colors: ['#ADEBAD']\r\n                        }}\r\n                    />\r\n                </ChartContainer>\r\n            </Container>\r\n            {/*<div>\r\n                <p>\r\n                    {player?.infos.name} est mort {getTotalPlayerStatusWithMission(EPlayerStatus.DEAD, EMissionStatus.SUCCESS)} fois alors\r\n                    que la mission s&apos;est soldé par un succès,<br /> ce qui représente {((getTotalPlayerStatusWithMission(EPlayerStatus.DEAD, EMissionStatus.SUCCESS) / getTotalMissionStatus(EMissionStatus.SUCCESS)) * 100)\r\n                        .toLocaleString(undefined, { maximumFractionDigits: 0 })}% des ses missions accomplies !\r\n                </p>\r\n            </div>*/}\r\n        </Base>\r\n    );\r\n}\r\n\r\nexport default PlayerDetail;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayerList, selectPlayerFetching, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport Loading from '@/components/Loading';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n`;\r\n\r\nconst AllPlayers = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const playerList = useAppSelector(selectPlayerList);\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    React.useEffect((): void => {\r\n        if (playerList.length <= 0) {\r\n            dispatch(fetchPlayerList());\r\n        }\r\n    }, [playerList]);\r\n\r\n    const getTop3Stats = (): unknown[] => {\r\n        const headers = ['Player', 'Count'];\r\n        if (playerList.length > 0) {\r\n            return [headers, ...playerList.slice().sort((a, b) => b.count_missions - a.count_missions).slice(0, 3).map(p => ([p.name, p.count_missions]))];\r\n        }\r\n        return [headers];\r\n    }\r\n\r\n    const getAverage = (): number => {\r\n        if (playerList.length > 0) {\r\n            let sumMiss = 0;\r\n            for (const player of playerList) {\r\n                sumMiss += player.count_missions;\r\n            }\r\n            return sumMiss / playerList.length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <h2>{playerList?.length} joueurs ont étés trouvés</h2>\r\n            <Container>\r\n                <Chart\r\n                    width={'auto'}\r\n                    height={'auto'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={getTop3Stats()}\r\n                    options={{\r\n                        isStacked: true,\r\n                        chart: { title: '3 plus gros joueurs' },\r\n                        legend: 'none',\r\n                        vAxis: { title: \"Nombre de missions\" },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n            <p>Chaque joueur a joué {getAverage().toLocaleString(undefined, { maximumFractionDigits: 0 })} missions en moyenne</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlayers;","import styled from \"@emotion/styled\";\r\n\r\nexport const HSeparator = styled.div<{ color?: string, width?: string }>`\r\n    border-bottom: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.width ? `width: ${props.width} ;` : ''}\r\n`;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Creatable from 'react-select/creatable';\r\n\r\nimport { fetchPlayerList, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\n\r\nconst Search = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 15%;\r\n\r\n    & > label {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        & > * {\r\n            margin: 5px 0 10px 0;\r\n            & > div:first-of-type {\r\n                border-radius: 5px 5px 0 0;\r\n                border: 0;\r\n                border-bottom: 1px solid var(--text);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ninterface ISelectItem {\r\n    name: string,\r\n    value: number | string\r\n}\r\n\r\ntype PropsType = {\r\n    setPlayer: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst SearchPlayer = (props: PropsType): JSX.Element => {\r\n    const { setPlayer } = props;\r\n    const dispatch = useAppDispatch();\r\n\r\n    const players = useAppSelector(selectPlayerList)\r\n\r\n    const [playersItems, setPlayersItems] = React.useState<ISelectItem[]>(new Array(0));\r\n\r\n    const selectRef = React.useRef<Creatable<ISelectItem, false>>(null);\r\n\r\n    const handlePlayerChange = (elmnt: ISelectItem | null): void => {\r\n        if (elmnt) {\r\n            if (elmnt.value === 0) {\r\n                dispatch(fetchPlayerList());\r\n            } else {\r\n                setPlayer(elmnt.value.toString());\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Delete' && selectRef.current) {\r\n            if (selectRef.current.select) {\r\n                ((selectRef.current.select as any).select as any).clearValue()\r\n                setPlayer(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (players.length > 0) {\r\n            setPlayersItems(players.map(p => ({ name: p.name, value: p.id })));\r\n        } else {\r\n            setPlayersItems([{ name: \"Récuperer les joueurs\", value: 0 }]);\r\n        }\r\n    }, [players]);\r\n\r\n    return (\r\n        <Search>\r\n            <label>Joueur :\r\n                <Creatable<ISelectItem, false>\r\n                    ref={selectRef}\r\n                    options={playersItems}\r\n                    onChange={handlePlayerChange}\r\n                    onKeyDown={handleKeyDown}\r\n                    components={{\r\n                        DropdownIndicator: () => null,\r\n                        IndicatorSeparator: () => null,\r\n                        Placeholder: () => null\r\n                    }}\r\n                    getOptionLabel={(p: ISelectItem) => `${p.value != 0 ? (typeof p.value === 'string' && !parseInt(p.value) ? p.value : `#${p.value}`) : ''}${p.value && p.name ? ' - ' : ''}${(p.name ? p.name : '')}`}\r\n                />\r\n            </label>\r\n        </Search>\r\n    );\r\n}\r\n\r\nexport default SearchPlayer;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport PlayerDetail from \"./Player\";\r\nimport AllPlayers from \"./Players\";\r\nimport { HSeparator } from '@/components';\r\nimport SearchPlayer from './SearchPlayer';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    playerID: string\r\n}\r\n\r\nconst Player = (props: PropsType): JSX.Element => {\r\n    const { playerID } = props;\r\n\r\n    const [player, setPlayer] = React.useState(playerID);\r\n\r\n    return (\r\n        <Flex>\r\n            <SearchPlayer setPlayer={setPlayer} />\r\n            <HSeparator width={\"50%\"} />\r\n            {\r\n                player ? <PlayerDetail id={player} /> : <AllPlayers />\r\n            }\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n//import styled from '@emotion/styled';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Player from '../../features/players';\r\n\r\ntype ParamsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayersView = (): JSX.Element => {\r\n    const { id }: ParamsType = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ visibility: 'hidden' }}>Joueurs</h1>\r\n            <Player playerID={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayersView;","export default __webpack_public_path__ + \"static/media/canardhurt.ed18cd85.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport canardhurt from '@res/canardhurt.png'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>404</h1>\r\n            <h2>Page non trouvée</h2>\r\n            <img src={canardhurt} />\r\n            <p>Alors là, on vous a perdu...</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Navbar from \"./features/commons/Navbar\";\r\n\r\nimport Home from \"./views/home\";\r\nimport Players from \"./views/players\";\r\n\r\nimport NotFound from \"./views/errors/NotFound\";\r\nimport NotImplemented from './views/errors/NotImplemented';\r\n\r\nconst AppContainer = styled.div`\r\n  margin-top: var(--nav-size);\r\n  text-align: center;\r\n  height: calc(100vh - var(--nav-size));\r\n`;\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Router basename='/'>\r\n      <Navbar />\r\n      <AppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path={[\"/players\", \"/players/:id\"]} component={Players} />\r\n          <Route exact path={[\"/missions\", \"/missions/:id\"]} component={NotImplemented} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </AppContainer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport playerReducer from \"./playerSlice\";\r\n\r\nconst reducer = combineReducers({\r\n    player: playerReducer\r\n});\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers';\r\n\r\nconst store = configureStore({\r\n    reducer\r\n});\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(reducer))\r\n}\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// TODO: npm run deploy"],"sourceRoot":""}