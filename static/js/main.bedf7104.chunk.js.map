{"version":3,"sources":["models/EMissionStatus.ts","features/commons/Navbar.tsx","views/home/App.tsx","views/home/index.tsx","app/hooks.ts","app/reducers/playerSlice.ts","features/commons/PieStyle.ts","components/Loading.tsx","models/EPlayerStatus.ts","components/Tag.tsx","components/index.ts","features/commons/CustomComboChart.tsx","features/players/DayGraph.tsx","features/players/Achivements.tsx","features/players/Player.tsx","features/players/Players.tsx","features/players/SearchPlayer.tsx","features/players/index.tsx","views/players/index.tsx","../res/canardhurt.png","views/errors/NotFound.tsx","views/errors/NotImplemented.tsx","app/reducers/mapsSlice.ts","features/maps/index.tsx","views/maps/index.tsx","features/commons/Footer.tsx","App.tsx","reportWebVitals.ts","app/reducers/index.ts","app/store.ts","index.tsx"],"names":["EMissionStatus","Nav","styled","nav","NavList","ul","NavItem","li","props","right","Navbar","id","exact","to","icon","faChartPie","faUsers","faGlobeEurope","faMap","href","faChartLine","Container","div","Applet","image","title","desc","onClick","tabIndex","src","Flex","Home","history","useHistory","push","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchPlayerList","createAsyncThunk","a","fetch","urljoin","urlAPI","json","fetchPlayer","getState","currPlayers","player","players","currIndex","findIndex","val","parseInt","name","playerSlice","createSlice","initialState","playerList","updated","lastFetchIndex","isFetching","extraReducers","pending","type","state","fulfilled","payload","rejected","error","console","length","reducers","selectPlayerList","createSelector","selectPlayer","selectPlayerFetching","PieStyle","colors","legend","position","pieSliceTextStyle","color","InfiniteRotate","keyframes","Background","Loading","faSyncAlt","size","EPlayerStatus","span","Tag","element","undefined","React","useState","setColor","content","setContent","useEffect","SUCCESS","ALIVE","FAILED","DEAD","HSeparator","width","VSeparator","height","CustomComboChart","stats","columns","chartType","loader","data","options","isStacked","vAxis","hAxis","seriesType","series","3","chartWrapperParams","view","chartFilters","value","label","TimeGraph","currStat","setCurrStat","defaultValue","onChange","elmnt","menuPlacement","Card","Achivements","achivements","setAchivements","achs","total_player_mission_status","SUCCES_Mort","total_mission_status","SUCCES","toLocaleString","maximumFractionDigits","count_missions","sortedRoles","Object","keys","roles","roles_count","map","key","i","count","values","sort","b","ReactTooltip","rebuild","data-tip","Base","UpdateLabel","p","PlayerContainer","InfoContainer","AchivementsContainer","ChartContainer","wide","PlayerDetail","dispatch","isPlayerLoading","roleStats","setRoleStats","deathStats","setDeathStats","looseStats","setLooseStats","monthStats","setMonthStats","Array","dayStats","setDayStats","playableWeeksInMonth","month","year","playablesDays","day","counter","date","Date","getMonth","includes","getDay","role","getRoleStats","alive","total_player_status","Vivant","death","Mort","getDeathStats","win","loose","ECHEC","pvp","PVP","getLooseStats","header","months","dayjs","reverse","getMonthStats","dataDead","dataFail","days","dayVal","format","Inconnu","INCONNU","log","getDayStats","last_mission","mission_status","textPosition","minValue","1","lineDashStyle","AllPlayers","topPlayer","setTopPlayer","averagePlayer","setAveragePlayer","getTop3Stats","getAverage","headers","slice","sumMiss","chart","Search","SearchPlayer","setPlayer","location","useLocation","playersItems","setPlayersItems","selectRef","useRef","ref","toString","window","replaceState","pathname","replace","onKeyDown","event","current","select","clearValue","components","DropdownIndicator","IndicatorSeparator","Placeholder","getOptionLabel","Player","playerID","Title","h1","PlayersView","useParams","NotFound","canardhurt","NotImplemented","fetchMapList","mapSlice","mapList","maps","selectMapList","selectMapFetching","MapsCharts","mapsList","isMapsFetching","topMaps","setTopMaps","getWorst5Stats","mission_count","Maps","Foot","footer","LinkText","IconWithLink","VAlign","margin","Footer","faFontAwesome","AppContainer","App","basename","path","component","Players","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","playerReducer","mapReducer","store","configureStore","extend","customParseFormat","locale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bedf7104.chunk.js","sourcesContent":["enum EMissionStatus {\r\n    UNKNOWN = 0,\r\n    SUCCESS,\r\n    FAILED\r\n}\r\n\r\nexport default EMissionStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartLine, faChartPie, faGlobeEurope, faMap, faUsers } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = styled.nav`\r\n    height: var(--nav-size);\r\n    width: 100%;\r\n    position: fixed;\r\n    float: left;\r\n    top: 0;\r\n    z-index: 9999;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    height: 100%;\r\n    list-style-type: none;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    background-color: var(--background-dark);\r\n`;\r\n\r\nconst NavItem = styled.li<{ right?: boolean }>`\r\n    height: 100%;\r\n    float: ${props => props.right ? 'right' : 'left'};\r\n\r\n    & > a {\r\n        display: inline-block;\r\n        color: var(--text);\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n        height: 100%;\r\n        &:hover {\r\n            background-color: var(--background-light);\r\n        }\r\n        &.active {\r\n            background-color: var(--accent1);\r\n        }\r\n    }\r\n\r\n    & svg {\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\nconst Navbar = (): JSX.Element => {\r\n    return (\r\n        <Nav id=\"navbar\">\r\n            <NavList>\r\n                <NavItem><NavLink exact to=\"/\"><FontAwesomeIcon icon={faChartPie} />GDC Graph</NavLink></NavItem>\r\n                <NavItem><NavLink to=\"/players\"><FontAwesomeIcon icon={faUsers} />Joueurs</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/missions\"><FontAwesomeIcon icon={faGlobeEurope} />Missions</NavLink></NavItem>\r\n                <NavItem><NavLink exact to=\"/maps\"><FontAwesomeIcon icon={faMap} />Maps</NavLink></NavItem>\r\n                <NavItem right><a href=\"https://grecedecanards.fr/GDCStats/\"><FontAwesomeIcon icon={faChartLine} />GDC Stats</a></NavItem>\r\n            </NavList>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    flex: 1 0 25%;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    margin: 5%;\r\n    padding: 5%;\r\n    cursor: pointer;\r\n`;\r\n\r\ntype PropsType = {\r\n    image: string,\r\n    title: string,\r\n    desc: string,\r\n    onClick: () => void\r\n}\r\n\r\nconst Applet = (props: PropsType): JSX.Element => {\r\n    const { image, title, desc, onClick } = props;\r\n    return (\r\n        <Container tabIndex={0} onClick={onClick}>\r\n            <img src={image} />\r\n            <h2>{title}</h2>\r\n            <p>{desc}</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Applet;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Applet from './App';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    justify-items: center;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Home = (): JSX.Element => {\r\n    const history = useHistory();\r\n\r\n    const handlePlayersClick = () => {\r\n        history.push('/players');\r\n    }\r\n\r\n    const handleMissionsClick = () => {\r\n        history.push('/missions');\r\n    }\r\n\r\n    const handleMapsClick = () => {\r\n        history.push('/maps');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex>\r\n                <Applet image=\"\" title=\"Joueurs\" desc=\"Affiche des stats générales sur les joueurs, ou un joueur en particulier.\" onClick={handlePlayersClick} />\r\n                <Applet image=\"\" title=\"Missions\" desc=\"Affiche des stats générales sur les missions, ou une mission en particulier.\" onClick={handleMissionsClick} />\r\n                <Applet image=\"\" title=\"Maps\" desc=\"Affiche des stats générales sur les maps\" onClick={handleMapsClick} />\r\n            </Flex>\r\n            <p>\r\n                Outil développé pour les canards de <a href=\"https://grecedecanards.fr/\">Grèce de Canard</a>.\r\n            </p>\r\n            <p>\r\n                Lié à <a href=\"https://grecedecanards.fr/GDCStats/\">GDC Stats</a>.\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IPlayerType, { IPlayersType } from '@/models/IPlayerType'\r\n\r\ntype PlayerListType = { players: IPlayersType[], updated: string }\r\ninterface PlayerState {\r\n    playerList: PlayerListType,\r\n    players: IPlayerType[],\r\n    lastFetchIndex: number,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const fetchPlayerList = createAsyncThunk(\r\n    'player/fetchPlayerList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/players'))).json()\r\n);\r\nexport const fetchPlayer = createAsyncThunk(\r\n    'player/fetchPlayer',\r\n    async (id: string, { getState }) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const currPlayers = ((getState() as any).player as PlayerState).players;\r\n        const currIndex = currPlayers.findIndex(val => val.id === parseInt(id) || val.name === id);\r\n        if (currIndex !== -1) {\r\n            return currPlayers[currIndex];\r\n        }\r\n\r\n        const player = await (await fetch(urljoin(urlAPI, `/players/${id}`))).json();\r\n        if (player.name)\r\n            return player;\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const playerSlice = createSlice({\r\n    name: 'player',\r\n    initialState: {\r\n        playerList: { players: [], updated: '' },\r\n        players: [],\r\n        lastFetchIndex: -1,\r\n        isFetching: false\r\n    } as PlayerState,\r\n    extraReducers: {\r\n        [fetchPlayerList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayerList.fulfilled.type]: (state, { payload: playerList }: PayloadAction<PlayerListType>): PlayerState => ({\r\n            ...state,\r\n            playerList,\r\n            isFetching: false\r\n        }),\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchPlayerList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n        [fetchPlayer.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchPlayer.fulfilled.type]: (state, { payload: player }: PayloadAction<IPlayerType | null>): PlayerState => {\r\n            let players = [...state.players];\r\n            let lastFetchIndex = -1;\r\n\r\n            if (player) {\r\n                lastFetchIndex = players.findIndex(val => val.id == player.id);\r\n\r\n                if (lastFetchIndex === -1) {\r\n                    lastFetchIndex = players.length;\r\n                    players = [...players, player];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                players,\r\n                lastFetchIndex,\r\n                isFetching: false\r\n            }\r\n        },\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchPlayer.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): PlayerState => state.player;\r\n\r\nexport const selectPlayerList = createSelector(getState, state => state.playerList);\r\nexport const selectPlayer = createSelector(getState, state => state.players[state.lastFetchIndex]);\r\nexport const selectPlayerFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default playerSlice.reducer;","const PieStyle = {\r\n    colors: [\r\n        '#81d5ff',\r\n        '#ee9e9e',\r\n        '#fceb96',\r\n        \"#ADEBAD\",\r\n        \"#C6A5CC\"\r\n    ],\r\n    legend: {\r\n        position: 'bottom'\r\n    },\r\n    pieSliceTextStyle: {\r\n        color: 'black'\r\n    }\r\n}\r\n\r\nexport default PieStyle;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { keyframes } from '@emotion/react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left:0 ;\r\n    z-index: 9998;\r\n    background-color: black;\r\n    opacity: 0.5;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > svg {\r\n        animation: ${InfiniteRotate} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst Loading = (): JSX.Element => {\r\n    return (\r\n        <Background>\r\n            <FontAwesomeIcon icon={faSyncAlt} color={'white'} size={'6x'} />\r\n        </Background>\r\n    );\r\n}\r\n\r\nexport default Loading;","enum EPlayerStatus {\r\n    UNKNOWN = 0,\r\n    ALIVE,\r\n    DEAD\r\n}\r\nexport default EPlayerStatus;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport EMissionStatus from '@/models/EMissionStatus';\r\nimport EPlayerStatus from '@/models/EPlayerStatus';\r\n\r\nconst Container = styled.span<{ color: string }>`\r\n    background-color: ${props => props.color};\r\n    font-size: 8pt;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n    vertical-align: text-top;\r\n`;\r\n\r\ntype PropsType = {\r\n    element: EMissionStatus | EPlayerStatus | undefined\r\n}\r\n\r\nconst Tag = (props: PropsType): JSX.Element => {\r\n    const { element } = props;\r\n\r\n    if (element === undefined) {\r\n        return <></>;\r\n    }\r\n\r\n    const [color, setColor] = React.useState('');\r\n    const [content, setContent] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        switch (element) {\r\n            case EMissionStatus.SUCCESS:\r\n                setColor('#81d5ff');\r\n                setContent('Succès');\r\n                break;\r\n            case EPlayerStatus.ALIVE:\r\n                setColor('#81d5ff');\r\n                setContent('Vivant');\r\n                break;\r\n\r\n            case EMissionStatus.FAILED:\r\n                setColor('#ee9e9e');\r\n                setContent('Echec');\r\n                break;\r\n            case EPlayerStatus.DEAD:\r\n                setColor('#ee9e9e');\r\n                setContent('Mort');\r\n                break;\r\n            default:\r\n                setColor('#fceb96');\r\n                setContent('Inconnu')\r\n                break;\r\n        }\r\n    }, [element]);\r\n\r\n    return (\r\n        <Container color={color}>\r\n            {content}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Tag;","import styled from \"@emotion/styled\";\r\n\r\nexport const HSeparator = styled.div<{ color?: string, width?: string }>`\r\n    border-bottom: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.width ? `width: ${props.width} ;` : ''}\r\n`;\r\nexport const VSeparator = styled.div<{ color?: string, height?: string }>`\r\n    border-left: 1px solid ${props => props.color ? props.color : 'var(--background-light)'};\r\n    ${props => props.height ? `height: ${props.height} ;` : ''}\r\n`;","import React from 'react';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { ChartStat } from '@/models/StatType';\r\nimport PieStyle from './PieStyle';\r\n\r\ntype PropsType = {\r\n    stats: ChartStat,\r\n    columns: number[]\r\n}\r\n\r\nconst CustomComboChart = (props: PropsType): JSX.Element => {\r\n    const { stats, columns } = props;\r\n\r\n    return (\r\n        <Chart\r\n            width={'100%'}\r\n            height={'250px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div>Waiting Data</div>}\r\n            data={stats}\r\n            options={{\r\n                isStacked: true,\r\n                vAxis: { title: \"Nombre de missions\" },\r\n                hAxis: {\r\n                    title: \"Journée\"\r\n                },\r\n                seriesType: 'bars',\r\n                series: { 3: { type: 'line' } },\r\n                ...PieStyle\r\n            }}\r\n            chartWrapperParams={{ view: { columns } }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CustomComboChart;","import React from 'react';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport CustomComboChart from '../commons/CustomComboChart';\r\nimport { ChartStat } from '@/models/StatType';\r\n\r\nexport type TimeStats = ChartStat[];\r\n\r\ntype PropsType = {\r\n    stats: TimeStats\r\n}\r\n\r\nconst chartFilters = [{ value: 1, label: \"Total\" }, { value: 2, label: \"Mort ou vif\" }, { value: 3, label: \"Victoire\" }];\r\n\r\nconst TimeGraph = (props: PropsType): JSX.Element => {\r\n    const { stats } = props;\r\n\r\n    const [currStat, setCurrStat] = React.useState(1);\r\n\r\n    const handleFilterChange = (elmnt: { value: number, label: string } | null) => {\r\n        if (elmnt?.value) {\r\n            setCurrStat(elmnt.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                currStat === 1 ? <CustomComboChart stats={stats[0]} columns={[0, 4]} /> : <></>\r\n            }\r\n            {\r\n                currStat === 2 ? <CustomComboChart stats={stats[0]} columns={[0, 1, 2, 3, 4]} /> : <></>\r\n            }\r\n            {\r\n                currStat === 3 ? <CustomComboChart stats={stats[1]} columns={[0, 1, 2, 3, 4, 5]} /> : <></>\r\n            }\r\n            <Select\r\n                defaultValue={chartFilters[0]}\r\n                options={chartFilters}\r\n                onChange={handleFilterChange}\r\n                menuPlacement=\"top\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TimeGraph;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport IPlayerType from '@/models/IPlayerType';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Card = styled.div`\r\n    background: var(--background-dark);\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border-radius: 5px;\r\n    & > h4 {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    player: IPlayerType\r\n}\r\n\r\ninterface AchivementType {\r\n    name: string,\r\n    icon: string,\r\n    desc: string\r\n}\r\n\r\nconst Achivements = (props: PropsType): JSX.Element => {\r\n    const { player } = props;\r\n\r\n    const [achivements, setAchivements] = React.useState<AchivementType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        const achs: AchivementType[] = [];\r\n        if (player) {\r\n            if (player.total_player_mission_status.SUCCES_Mort / player.total_mission_status.SUCCES > .4) {\r\n                achs.push({\r\n                    name: \"Elle a fini sans toi\",\r\n                    icon: \"\",\r\n                    desc: `Est mort dans ${(player.total_player_mission_status.SUCCES_Mort / player.total_mission_status.SUCCES * 100).toLocaleString(undefined, { maximumFractionDigits: 2 })}% de ses missions accomplies`\r\n                });\r\n            }\r\n\r\n            if (player.count_missions > 400) {\r\n                achs.push({\r\n                    name: \"Petit joueur\",\r\n                    icon: \"\",\r\n                    desc: `A joué seulement ${player.count_missions} missions`\r\n                });\r\n            }\r\n\r\n            const sortedRoles = Object.keys(player.roles.roles_count).map((key, i) => ({\r\n                name: key,\r\n                count: Object.values(player?.roles.roles_count)[i]\r\n            })).sort((a, b) => b.count - a.count);\r\n            if (sortedRoles[0].count / player?.count_missions > .4) {\r\n                achs.push({\r\n                    name: `Éternel ${sortedRoles[0].name}`,\r\n                    icon: \"\",\r\n                    desc: `A joué ${(sortedRoles[0].count / player.count_missions * 100).toLocaleString(undefined, { maximumFractionDigits: 2 })}% de ses missions en tant que ${sortedRoles[0].name}`\r\n                });\r\n            }\r\n        }\r\n        setAchivements(achs);\r\n        ReactTooltip.rebuild();\r\n    }, [player]);\r\n\r\n    return (\r\n        <>\r\n            {achivements.map((a, id) => (\r\n                <Card key={id} data-tip={a.desc}>\r\n                    <h4>{a.name}</h4>\r\n                </Card>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Achivements;\r\n/*\r\n<div>\r\n                        <h3>Elle a fini sans toi</h3>\r\n                        <p>\r\n                            {player?.name} est mort {player?.total_player_mission_status.SUCCES_Mort} fois alors\r\n                    que la mission s&apos;est soldé par un succès,<br /> ce qui représente {((player?.total_player_mission_status.SUCCES_Mort / player?.total_mission_status.SUCCES) * 100)\r\n                                .toLocaleString(undefined, { maximumFractionDigits: 0 })}% des ses missions accomplies !\r\n                        </p>\r\n                    </div>\r\n */","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayer, selectPlayer, selectPlayerFetching } from '@/app/reducers/playerSlice';\r\n\r\nimport PieStyle from '../commons/PieStyle';\r\nimport Loading from '@/components/Loading';\r\nimport Tag from '@/components/Tag';\r\nimport { HSeparator, VSeparator } from '@/components';\r\nimport dayjs from 'dayjs';\r\nimport TimeGraph, { TimeStats } from './DayGraph';\r\nimport { ChartStat } from '@/models/StatType';\r\nimport Achivements from './Achivements';\r\n\r\nconst Base = styled.div`\r\n    width: 50%;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n    color: var(--background-light);\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst PlayerContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    text-align: left;\r\n`;\r\n\r\nconst AchivementsContainer = styled.div`\r\n    text-align: right;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst ChartContainer = styled.div<{ wide?: string }>`\r\n    flex-basis: ${props => props.wide ? '75%' : '49%'};\r\n    width: ${props => props.wide ? props.wide : '25%'};\r\n    & *[dir=\"ltr\"] {\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayerDetail = (props: PropsType): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const { id } = props;\r\n    const player = useAppSelector(selectPlayer)\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    const [roleStats, setRoleStats] = React.useState({});\r\n    const [deathStats, setDeathStats] = React.useState({});\r\n    const [looseStats, setLooseStats] = React.useState({});\r\n    const [monthStats, setMonthStats] = React.useState({});\r\n    const [dayStats, setDayStats] = React.useState(new Array(0));\r\n\r\n    React.useEffect((): void => {\r\n        dispatch(fetchPlayer(id))\r\n    }, [id]);\r\n\r\n    const getDeathStats = (): ChartStat[] => {\r\n        const data: ChartStat[] = [[\"Status fin\", \"Nombre\"]];\r\n        if (player) {\r\n            const alive = player.total_player_status.Vivant;\r\n            const death = player.total_player_status.Mort;\r\n            if (alive) {\r\n                data.push(['Vivant', alive]);\r\n            }\r\n            if (death) {\r\n                data.push(['Mort', death]);\r\n            }\r\n            if (alive + death !== player.count_missions) {\r\n                data.push(['Inconnu', player.count_missions - (alive + death)]);\r\n            }\r\n            return data;\r\n        }\r\n        return [...data, [\"\", 0]];\r\n    }\r\n\r\n    const getLooseStats = (): ChartStat[] => {\r\n        const data: ChartStat[] = [[\"Verdict\", \"Nombre\"]];\r\n        if (player) {\r\n            const win = player.total_mission_status.SUCCES;\r\n            const loose = player.total_mission_status.ECHEC;\r\n            const pvp = player.total_mission_status.PVP;\r\n            if (win) {\r\n                data.push(['Succès', win]);\r\n            }\r\n            if (loose) {\r\n                data.push(['Echec', loose]);\r\n            }\r\n            if (pvp) {\r\n                data.push(['PVP', pvp]);\r\n            }\r\n            if (win + loose + pvp !== player.count_missions) {\r\n                data.push(['Inconnu', player.count_missions - (win + loose + pvp)]);\r\n            }\r\n            return data;\r\n        }\r\n        return [...data, [\"\", 0]];\r\n    }\r\n\r\n    const getRoleStats = (): unknown[] => {\r\n        const data: ChartStat[] = [[\"Role\", \"Nombre\"]];\r\n        if (player) {\r\n            for (let i = 0; i < Object.keys(player.roles.roles_count).length; i++) {\r\n                const role = Object.keys(player.roles.roles_count)[i];\r\n                if (Object.values(player.roles.roles_count)[i] > 0)\r\n                    data.push([role, Object.values(player.roles.roles_count)[i]])\r\n            }\r\n            return data.sort((a, b) => typeof a[1] === 'number' && typeof b[1] === 'number' ? b[1] - a[1] : 0);\r\n        }\r\n        return [...data, [\"\", 0]]\r\n    }\r\n\r\n    const playableWeeksInMonth = (month: number, year: number): number => {\r\n        const playablesDays = [0, 3, 5, 6];\r\n        let day = 1;\r\n        let counter = 0;\r\n        let date = new Date(year, month, day);\r\n        while (date.getMonth() === month) {\r\n            if (playablesDays.includes(date.getDay())) {\r\n                counter++;\r\n            }\r\n            day++;\r\n            date = new Date(year, month, day);\r\n        }\r\n\r\n        return counter;\r\n    }\r\n\r\n    const getMonthStats = (): ChartStat[] => {\r\n        const header = [\"Mois\", \"Nombre\", \"Maximum*\"];\r\n        if (player) {\r\n            const data: ChartStat[] = [];\r\n            for (let i = 0; i < Object.keys(player.months).length; i++) {\r\n                const month = Object.keys(player.months)[i];\r\n                const date = dayjs(month, 'MMM YYYY');\r\n                if (Object.values(player.months)[i] > 0) {\r\n                    data.push([month, Object.values(player.months)[i], playableWeeksInMonth(date.month(), date.year())])\r\n                }\r\n            }\r\n            return [header, ...data.reverse()];\r\n        }\r\n        return [header, [\"\", 0, 0]];\r\n    }\r\n\r\n    const getDayStats = (): TimeStats[] => {\r\n        const dataDead: TimeStats = [[\"Journée\", \"Vivant\", \"Mort\", \"Inconnu\", \"Total\", \"\"]];\r\n        const dataFail: TimeStats = [[\"Journée\", \"Succès\", \"Echec\", \"Inconnu\", \"Total\", \"PVP\"]];\r\n        if (player) {\r\n            for (let i = 0; i < Object.keys(player.days).length; i++) {\r\n                const day = Object.keys(player.days)[i];\r\n                const dayVal = Object.values(player.days)[i];\r\n                if (dayVal.count > 0) {\r\n                    const label = dayjs().day(parseInt(day)).format('dd');\r\n                    dataDead.push([label, dayVal.Vivant, dayVal.Mort, dayVal.Inconnu, dayVal.count, 0]);\r\n                    dataFail.push([label, dayVal.SUCCES, dayVal.ECHEC, dayVal.INCONNU, dayVal.count, dayVal.PVP]);\r\n                }\r\n            }\r\n            console.log([dataDead, dataFail]);\r\n            return [dataDead, dataFail];\r\n        }\r\n        return [[...dataDead, [\"\", 0, 0, 0, 0, 0]], [...dataFail, [\"\", 0, 0, 0, 0, 0]]];\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!isPlayerLoading) {\r\n            setRoleStats(getRoleStats());\r\n            setDeathStats(getDeathStats());\r\n            setLooseStats(getLooseStats());\r\n            setMonthStats(getMonthStats());\r\n            setDayStats(getDayStats());\r\n        }\r\n    }, [isPlayerLoading]);\r\n\r\n    return (\r\n        <Base>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <UpdateLabel>Mis à jour le : {dayjs(player?.updated).format('DD/MM/YYYY - HH:mm')}</UpdateLabel>\r\n            <PlayerContainer>\r\n                <InfoContainer>\r\n                    <h2>#{player?.id} - {player?.name}</h2>\r\n                    <p>{player?.count_missions || 0} missions au compteur</p>\r\n                    <p>Dernière mission joué le {player?.last_mission?.date} <Tag element={player?.last_mission?.mission_status} /></p>\r\n                </InfoContainer>\r\n                <AchivementsContainer>\r\n                    <Achivements player={player} />\r\n                </AchivementsContainer>\r\n            </PlayerContainer>\r\n            <HSeparator />\r\n            <Container>\r\n                <ChartContainer>\r\n                    <h3>Mort ou vif</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={deathStats}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                    <p>\r\n                        Ratio : {(player?.total_player_status.Vivant / player?.total_player_status.Mort)\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                </ChartContainer>\r\n                <VSeparator />\r\n                <ChartContainer>\r\n                    <h3>Victoire</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'auto'}\r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={looseStats}\r\n                        options={{ ...PieStyle }}\r\n                    />\r\n                    <p>\r\n                        Ratio : {(player?.total_mission_status.SUCCES / player?.total_mission_status.ECHEC)\r\n                            .toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                </ChartContainer>\r\n                <ChartContainer wide={\"100%\"}>\r\n                    <h3>Roles</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'300px'}\r\n                        chartType=\"ColumnChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={roleStats}\r\n                        options={{\r\n                            isStacked: true,\r\n                            legend: 'none',\r\n                            vAxis: { title: \"Nombre de missions\" },\r\n                            hAxis: {\r\n                                title: \"Role\",\r\n                                textPosition: 'none'\r\n                            },\r\n                            colors: ['#ADEBAD']\r\n                        }}\r\n                    />\r\n                </ChartContainer>\r\n                <ChartContainer>\r\n                    <h3>Nombre de missions par mois</h3>\r\n                    <Chart\r\n                        width={'100%'}\r\n                        height={'250px'}\r\n                        chartType=\"LineChart\"\r\n                        loader={<div>Waiting Data</div>}\r\n                        data={monthStats}\r\n                        options={{\r\n                            isStacked: true,\r\n                            vAxis: {\r\n                                title: \"Nombre de missions\",\r\n                                minValue: 0\r\n                            },\r\n                            hAxis: {\r\n                                title: \"Mois\",\r\n                            },\r\n                            series: {\r\n                                1: { lineDashStyle: [4, 4] }\r\n                            },\r\n                            ...PieStyle\r\n                        }}\r\n                    />\r\n                    <p>\r\n                        *//TODO Explication Max\r\n                    </p>\r\n                </ChartContainer>\r\n                <ChartContainer>\r\n                    <h3>Nombre de missions par journée</h3>\r\n                    <TimeGraph stats={dayStats} />\r\n                </ChartContainer>\r\n            </Container>\r\n        </Base>\r\n    );\r\n}\r\n\r\nexport default PlayerDetail;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchPlayerList, selectPlayerFetching, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport Loading from '@/components/Loading';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n    color: var(--background-light);\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst AllPlayers = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const playerList = useAppSelector(selectPlayerList);\r\n    const isPlayerLoading = useAppSelector(selectPlayerFetching);\r\n\r\n    const [topPlayer, setTopPlayer] = React.useState<unknown[]>();\r\n    const [averagePlayer, setAveragePlayer] = React.useState<number>();\r\n\r\n    React.useEffect((): void => {\r\n        if (playerList.players.length <= 0) {\r\n            dispatch(fetchPlayerList());\r\n        } else {\r\n            setTopPlayer(getTop3Stats());\r\n            setAveragePlayer(getAverage());\r\n        }\r\n    }, [playerList]);\r\n\r\n    const getTop3Stats = (): unknown[] => {\r\n        const headers = ['Joueur', 'Nombre de missions'];\r\n        if (playerList.players.length > 0) {\r\n            return [headers, ...playerList.players.slice().sort((a, b) => b.count_missions - a.count_missions).slice(0, 3).map(p => ([p.name, p.count_missions]))];\r\n        }\r\n        return [headers, [\"\", 0]];\r\n    }\r\n\r\n    const getAverage = (): number => {\r\n        if (playerList.players.length > 0) {\r\n            let sumMiss = 0;\r\n            for (const player of playerList.players) {\r\n                sumMiss += player.count_missions;\r\n            }\r\n            return sumMiss / playerList.players.length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isPlayerLoading ? <Loading /> : <></>}\r\n            <UpdateLabel>Mis à jour le : {dayjs(playerList?.updated).format('DD/MM/YYYY - HH:mm:ss')}</UpdateLabel>\r\n            <h2>{playerList?.players.length} joueurs ont été trouvés</h2>\r\n            <Container>\r\n                <Chart\r\n                    width={'auto'}\r\n                    height={'auto'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={topPlayer}\r\n                    options={{\r\n                        isStacked: true,\r\n                        chart: { title: '3 plus gros joueurs' },\r\n                        legend: 'none',\r\n                        vAxis: { title: \"Nombre de missions\" },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n            <p>Chaque joueur a joué {averagePlayer?.toLocaleString(undefined, { maximumFractionDigits: 0 })} missions en moyenne</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlayers;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Creatable from 'react-select/creatable';\r\n\r\nimport { fetchPlayerList, selectPlayerList } from '@/app/reducers/playerSlice';\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Search = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 15%;\r\n\r\n    & > label {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        & > * {\r\n            margin: 5px 0 10px 0;\r\n            & > div:first-of-type {\r\n                border-radius: 5px 5px 0 0;\r\n                border: 0;\r\n                border-bottom: 1px solid var(--text);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ninterface ISelectItem {\r\n    name: string,\r\n    value: number | string\r\n}\r\n\r\ntype PropsType = {\r\n    setPlayer: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst SearchPlayer = (props: PropsType): JSX.Element => {\r\n    const { setPlayer } = props;\r\n    const dispatch = useAppDispatch();\r\n    const location = useLocation();\r\n\r\n    const players = useAppSelector(selectPlayerList)\r\n\r\n    const [playersItems, setPlayersItems] = React.useState<ISelectItem[]>(new Array(0));\r\n\r\n    const selectRef = React.useRef<Creatable<ISelectItem, false>>(null);\r\n\r\n    const handlePlayerChange = (elmnt: ISelectItem | null): void => {\r\n        if (elmnt) {\r\n            if (elmnt.value === 0) {\r\n                dispatch(fetchPlayerList());\r\n            } else {\r\n                setPlayer(elmnt.value.toString());\r\n                window.history.replaceState(null, \"\", '#' + location.pathname.replace(/(\\b\\/.*$|$)/, '/' + elmnt.value.toString()));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Delete' && selectRef.current) {\r\n            if (selectRef.current.select) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                ((selectRef.current.select as any).select as any).clearValue()\r\n                setPlayer(\"\");\r\n                window.history.replaceState(null, \"\", '#' + location.pathname.replace(/(\\b\\/.*$|$)/, ''));\r\n            }\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (players.players.length > 0) {\r\n            setPlayersItems(players.players.map(p => ({ name: p.name, value: p.id })));\r\n        } else {\r\n            setPlayersItems([{ name: \"Récuperer les joueurs\", value: 0 }]);\r\n        }\r\n    }, [players]);\r\n\r\n    return (\r\n        <Search>\r\n            <label>Joueur :\r\n                <Creatable<ISelectItem, false>\r\n                    ref={selectRef}\r\n                    options={playersItems}\r\n                    onChange={handlePlayerChange}\r\n                    onKeyDown={handleKeyDown}\r\n                    components={{\r\n                        DropdownIndicator: () => null,\r\n                        IndicatorSeparator: () => null,\r\n                        Placeholder: () => null\r\n                    }}\r\n                    getOptionLabel={(p: ISelectItem) => `${p.value != 0 ? (typeof p.value === 'string' && !parseInt(p.value) ? p.value : `#${p.value}`) : ''}${p.value && p.name ? ' - ' : ''}${(p.name || '')}`}\r\n                />\r\n            </label>\r\n        </Search>\r\n    );\r\n}\r\n\r\nexport default SearchPlayer;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport PlayerDetail from \"./Player\";\r\nimport AllPlayers from \"./Players\";\r\nimport { HSeparator } from '@/components';\r\nimport SearchPlayer from './SearchPlayer';\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    playerID: string\r\n}\r\n\r\nconst Player = (props: PropsType): JSX.Element => {\r\n    const { playerID } = props;\r\n\r\n    const [player, setPlayer] = React.useState(playerID);\r\n\r\n    return (\r\n        <Flex>\r\n            <SearchPlayer setPlayer={setPlayer} />\r\n            <HSeparator width={\"50%\"} />\r\n            {\r\n                player ? <PlayerDetail id={player} /> : <AllPlayers />\r\n            }\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Player from '../../features/players';\r\n\r\nconst Title = styled.h1`\r\n    visibility: hidden;\r\n    margin: 0;\r\n`;\r\n\r\ntype ParamsType = {\r\n    id: string\r\n}\r\n\r\nconst PlayersView = (): JSX.Element => {\r\n    const { id }: ParamsType = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Title>Joueurs</Title>\r\n            <Player playerID={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayersView;","export default __webpack_public_path__ + \"static/media/canardhurt.ed18cd85.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport canardhurt from '@res/canardhurt.png'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>404</h1>\r\n            <h2>Page non trouvée</h2>\r\n            <img src={canardhurt} />\r\n            <p>Alors là, on vous a perdu...</p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst NotImplemented = (): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <h1>501</h1>\r\n            <h2>Page en cours de construction</h2>\r\n            <p>\r\n                &quot;Vous pouvez attendre le temps que je bosse ?&quot;<br />\r\n                <a href=\"https://github.com/oxypomme\">OxyTom</a>, 2021\r\n            </p>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotImplemented;","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '@/app/store'\r\n\r\nimport { url as urlAPI } from '@config/gdcapi.json';\r\nimport urljoin from 'url-join';\r\n\r\nimport IMapType from \"@/models/IMapType\";\r\n\r\nexport const fetchMapList = createAsyncThunk(\r\n    'maps/fetchMapList',\r\n    async () => await (await fetch(urljoin(urlAPI, '/maps'))).json()\r\n);\r\n\r\ntype MapListType = { maps: IMapType[], updated: string };\r\ninterface MapsState {\r\n    mapList: MapListType,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const mapSlice = createSlice({\r\n    name: 'map',\r\n    initialState: {\r\n        mapList: { maps: [], updated: '' },\r\n        isFetching: false\r\n    } as MapsState,\r\n    extraReducers: {\r\n        [fetchMapList.pending.type]: (state) => ({\r\n            ...state,\r\n            isFetching: true\r\n        }),\r\n        [fetchMapList.fulfilled.type]: (state, { payload: mapList }: PayloadAction<MapListType>): MapsState => ({\r\n            ...state,\r\n            mapList,\r\n            isFetching: false\r\n        }),\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        [fetchMapList.rejected.type]: (state, { error }: any) => {\r\n            console.error(error);\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        },\r\n    },\r\n    reducers: {}\r\n});\r\n\r\nconst getState = (state: RootState): MapsState => state.map;\r\n\r\nexport const selectMapList = createSelector(getState, state => state.mapList);\r\nexport const selectMapFetching = createSelector(getState, state => state.isFetching);\r\n\r\nexport default mapSlice.reducer;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { useAppDispatch, useAppSelector } from '@/app/hooks';\r\nimport { fetchMapList, selectMapFetching, selectMapList } from '@/app/reducers/mapsSlice';\r\nimport Loading from '@/components/Loading';\r\nimport { ChartStat } from '@/models/StatType';\r\nimport { Chart } from 'react-google-charts';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UpdateLabel = styled.p`\r\n    color: var(--background-light);\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst MapsCharts = (): JSX.Element => {\r\n    const dispatch = useAppDispatch();\r\n    const mapsList = useAppSelector(selectMapList);\r\n    const isMapsFetching = useAppSelector(selectMapFetching);\r\n\r\n    const [topMaps, setTopMaps] = React.useState<ChartStat[]>()\r\n\r\n    React.useEffect((): void => {\r\n        if (mapsList?.maps.length <= 0) {\r\n            dispatch(fetchMapList());\r\n        } else {\r\n            setTopMaps(getWorst5Stats());\r\n\r\n        }\r\n    }, [mapsList])\r\n\r\n    const getWorst5Stats = (): ChartStat[] => {\r\n        const header = ['Map', 'Nombre de missions']\r\n        if (mapsList?.maps.length > 0) {\r\n            return [header, ...mapsList?.maps.slice().sort((a, b) => a.mission_count - b.mission_count).slice(0, 5).map(p => ([p.name, p.mission_count]))];\r\n        }\r\n        return [header, ['', 0]]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isMapsFetching ? <Loading /> : <></>}\r\n            <UpdateLabel>Mis à jour le : {dayjs(mapsList?.updated).format('DD/MM/YYYY - HH:mm')}</UpdateLabel>\r\n            <Container>\r\n                <h2>Maps les moins jouées</h2>\r\n                <Chart\r\n                    width={'600px'}\r\n                    height={'300px'}\r\n                    chartType=\"ColumnChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={topMaps}\r\n                    options={{\r\n                        isStacked: true,\r\n                        hAxis: { title: 'Map' },\r\n                        legend: 'none',\r\n                        vAxis: { title: \"Nombre de missions\" },\r\n                        colors: ['#ADEBAD']\r\n                    }}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapsCharts;","import React from 'react';\r\n//import styled from '@emotion/styled';\r\n\r\nimport MapsCharts from '@/features/maps';\r\n\r\nconst Maps = (): JSX.Element => {\r\n    return (\r\n        <>\r\n            <MapsCharts />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Maps;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFontAwesome } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Foot = styled.footer`\r\n    background-color: var(--background-dark);\r\n    text-align: center;\r\n    font-size: 14px;\r\n    height: var(--footer-size);\r\n    padding: 5px;\r\n    \r\n    position:absolute;\r\n    width:100%;\r\n    bottom:0px;\r\n`;\r\n\r\nconst LinkText = styled.span`\r\n    text-decoration: underline;\r\n`;\r\n\r\nconst IconWithLink = styled.a<{ margin?: string, VAlign?: boolean }>`\r\n    ${props => props.VAlign ? \"vertical-align: middle;\" : ''}\r\n    text-decoration: none;\r\n    & > svg{\r\n        ${props => props.margin ? \"margin:\" + props.margin + \";\" : ''}\r\n        transition: opacity 0.25s;\r\n    }\r\n    &:hover > svg{\r\n        opacity: 0.75;\r\n    }\r\n`;\r\n\r\nconst Footer = (): JSX.Element => {\r\n    return (\r\n        <Foot>\r\n            <p>\r\n                All icons used are from <IconWithLink href=\"https://fontawesome.com\"><FontAwesomeIcon icon={faFontAwesome} color=\"#339af0\" /> <LinkText>Font Awesome</LinkText></IconWithLink>.\r\n            </p>\r\n            <p>\r\n                <a href=\"https://github.com/oxypomme/gdcgraph/graphs/contributors\">Liste des contributeurs</a>\r\n            </p>\r\n        </Foot>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport Navbar from \"./features/commons/Navbar\";\r\n\r\nimport Home from \"./views/home\";\r\nimport Players from \"./views/players\";\r\n\r\nimport NotFound from \"./views/errors/NotFound\";\r\nimport NotImplemented from './views/errors/NotImplemented';\r\nimport Maps from './views/maps';\r\nimport Footer from './features/commons/Footer';\r\n\r\nconst AppContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Router basename='/'>\r\n      <Navbar />\r\n      <AppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path={[\"/players\", \"/players/:id\"]} component={Players} />\r\n          <Route exact path={[\"/missions\", \"/missions/:id\"]} component={NotImplemented} />\r\n          <Route exact path={\"/maps\"} component={Maps} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </AppContainer>\r\n      <Footer />\r\n      <ReactTooltip type='light' />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport playerReducer from \"./playerSlice\";\r\nimport mapReducer from \"./mapsSlice\";\r\n\r\nconst reducer = combineReducers({\r\n    player: playerReducer,\r\n    map: mapReducer\r\n});\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers';\r\n\r\nconst store = configureStore({\r\n    reducer\r\n});\r\nif (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(reducer))\r\n}\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport dayjs from 'dayjs';\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport { } from \"dayjs/locale/fr\";\r\ndayjs.extend(customParseFormat);\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from './app/store';\r\n\r\ndayjs.locale('fr');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// TODO: npm run deploy"],"sourceRoot":""}